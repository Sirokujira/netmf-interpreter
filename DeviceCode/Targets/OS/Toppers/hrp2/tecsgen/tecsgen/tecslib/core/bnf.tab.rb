#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "tecslib/core/bnf.y.rb".
#

require 'racc/parser'


class Generator < Racc::Parser

module_eval <<'..end tecslib/core/bnf.y.rb modeval..id5f5c9104bd', 'tecslib/core/bnf.y.rb', 1471

  RESERVED = {
    # keyword
    'namespace' => :NAMESPACE,
    'signature' => :SIGNATURE,
    'celltype' => :CELLTYPE,
    'cell' => :CELL,
    'attr' => :ATTRIBUTE,
    'var' => :VAR,
    'call' => :CALL,
    'entry' => :ENTRY,
    'composite' => :COMPOSITE,
    'require' => :REQUIRE,
    'factory' => :FACTORY,
    'FACTORY' => :CTFACTORY,
    'typedef' => :TYPEDEF,
    'struct' => :STRUCT,
    'region' => :REGION,
    'import' => :IMPORT,
    'import_C' => :IMPORT_C,
    'generate' => :GENERATE,

    # types
    'void'    => :VOID,

    'volatile'=> :VOLATILE,
    'const'   => :CONST,

    'signed'  => :SIGNED,
    'unsigned'=> :UNSIGNED,

    'int8_t'    => :INT8_T,
    'int16_t'   => :INT16_T,
    'int32_t'   => :INT32_T,
    'int64_t'   => :INT64_T,
    'int128_t'  => :INT128_T,
    'uint8_t'   => :UINT8_T,
    'uint16_t'  => :UINT16_T,
    'uint32_t'  => :UINT32_T,
    'uint64_t'  => :UINT64_T,
    'uint128_t' => :UINT128_T,

    'float32_t'   => :FLOAT32_T,
    'double64_t'  => :DOUBLE64_T,
    'bool_t'      => :BOOL_T,
    'char_t'  => :CHAR_T,
    'schar_t'  => :SCHAR_T,
    'uchar_t'  => :UCHAR_T,

    # unrecommened types
    'int'     => :INT,
#   'intptr'  => :INTPTR,
    'short'   => :SHORT,
    'long'    => :LONG,

    # obsolete types
    'char'    => :CHAR,
    'int8'    => :INT8,
    'int16'   => :INT16,
    'int32'   => :INT32,
    'int64'   => :INT64,
    'int128'  => :INT128,
    'float'   => :FLOAT,
    'double'  => :DOUBLE,
#   'bool'    => :BOOL,

    'enum'    => :ENUM,
    'enum8'   => :ENUM8,
    'enum16'  => :ENUM16,
    'enum32'  => :ENUM32,
    'enum64'  => :ENUM64,

    'true'    => :TRUE,
    'false'   => :FALSE,

    'C_EXP'   => :C_EXP,

    'Descriptor'   => :DESCRIPTOR,

    # location information for TECSCDE
    '__location_information__' => :__LOCATION_INFORMATION__,
    '__cell__' => :__CELL__,
    '__join__' => :__JOIN__,
  }

  # 指定子 '[]' 内でのみ使用できるキーワード
  RESERVED2 = {
    # specifier
    'id' => :ID,

    # signature
    'context' => :CONTEXT,
    'deviate' => :DEVIATE,

    # celltype
    'singleton' => :SINGLETON,
    'idx_is_id' => :IDX_IS_ID,
    'active' => :ACTIVE,

    # port (entry)
    'inline' => :INLINE,
    'ref_desc' => :REF_DESC,   # call も可

    # port (call)
    'optional' => :OPTIONAL,
    'dynamic' => :DYNAMIC,

    # attribute
    'omit' => :OMIT,
    'choice' => :CHOICE,

    # cell
    'allocator' => :ALLOCATOR,
    'prototype' => :PROTOTYPE,

    # FuncType
    'oneway' => :ONEWAY,

    # parameter (basic)
    'in' => :IN,
    'out' => :OUT,
    'inout' => :INOUT,
    'send' => :SEND,
    'receive' => :RECEIVE,

    # parameter 
    'size_is' => :SIZE_IS,
    'count_is' => :COUNT_IS,
    'string' => :STRING,
    'nullable' => :NULLABLE,

    'through' => :THROUGH,
    'in_through' => :IN_THROUGH,
    'out_through' => :OUT_THROUGH,
    'to_through' => :TO_THROUGH,

    'node' => :NODE,
    'linkunit' => :LINKUNIT ,
    'domain' => :DOMAIN,
    'class' => :CLASS,
  }

  # 再帰的なパーサのためのスタック
  @@generator_nest = -1
  @@generator_stack = []
  @@current_locale = []

  # import_C 中である
  @@import_C = false

  # すべての構文解析が完了した
  @@b_end_all_parse = false

  # tag なし struct
  @@no_struct_tag_num = 0

  def self.parse( file_name, plugin = nil, b_reuse = false )
    # パーサインスタンスを生成(別パーサで読み込む)
    parser = Generator.new

    # plugin から import されている場合の plugin 設定
    parser.set_plugin plugin

    # reuse フラグを設定
    parser.set_reuse b_reuse

    # cdl をパース
    parser.parse( [file_name] )

    # 終期化　パーサスタックを戻す
    parser.finalize
  end

  def finalize

    # mikan Namespace.pop
    Namespace.pop
    Signature.pop
    Celltype.pop
    Cell.pop
    CompositeCelltype.pop
  end

  def set_plugin( plugin )
    @plugin = plugin
  end

  def self.get_plugin
    if @@generator_stack[@@generator_nest] then
      # tecsgen 引数の cdl が import される場合は nil
      return @@generator_stack[@@generator_nest].get_plugin
    else
      return nil
    end
  end

  def get_plugin
    @plugin
  end

  def set_reuse( b_reuse )
    @b_reuse = b_reuse
  end

  def self.is_reuse?
    if @@generator_stack[@@generator_nest] then
      # tecsgen 引数の cdl が import される場合は nil
      return @@generator_stack[@@generator_nest].is_reuse?
    else
      return false
    end
  end

  def is_reuse?
    @b_reuse
  end

  def parse(files)

    # mikan Namespace.push
    Namespace.push
    Signature.push
    Celltype.push
    Cell.push
    CompositeCelltype.push

    @@generator_nest += 1
    @@generator_stack[@@generator_nest] = self
    @in_specifier = false

    begin

      @q = []
      b_in_comment = false
      b_in_string = false

      # euc のコメントを utf8 として扱うと、コメントの終わりを誤る問題の対策
      TECS_LANG::set_kcode_binary

      files.each {|file|
        lineno = 1
        begin
          string = ""
#2.0          IO.foreach(file) {|line|
          TECSIO.foreach(file) {|line|
            col = 1
#            line.rstrip!         改行含む文字列を扱うようになったので、ここで空白を取り除けなくなった

            until line.empty?

              if b_in_comment
                case line
                  # コメント終了
                when /\A\*\//
                  b_in_comment = false
                when /\A./
                  ;
                when /\s+/     # line.rstrip! を止めたため \n などの空白文字とまっちするルールが必要になった
                  ;
                end
              elsif b_in_string
                if line =~ /\A(?:[^"\\]|\\.)*"/
                  string = "#{string}#{$&}"
                  @q <<  [:STRING_LITERAL, Token.new(string, file, lineno, col)]
                  b_in_string = false
                elsif line =~ /\A.*\\\n/     # 改行 \n は '.' にマッチしない
                  string += $&
                elsif line =~ /\A.*\n/     # 改行 \n は '.' にマッチしない
                  string += line
                  # この位置では error メソッドは使えない (token 読出し前)
                  puts "error: #{file} line #{lineno}: string literal has newline without escape"
                  @@n_error += 1
                end
              else
                case line
                # 空白、プリプロセスディレクティブ
                when /\A\s+/
                  ;
                # 識別子
                when /\A[a-zA-Z_]\w*/
                  word = $&
                  @q << [RESERVED[word] || :IDENTIFIER, Token.new(word.intern, file, lineno, col)]
                # 16 進数定数
                when /\A0x[0-9A-Fa-f]+/
                  @q << [:HEX_CONSTANT, Token.new($&, file, lineno, col)]
                # 8 進数定数
                when /\A0[0-7]+/
                  @q << [:OCTAL_CONSTANT, Token.new($&, file, lineno, col)]
                # 浮動小数定数
                when /\A[0-9]+\.([0-9]*)?([Ee][+-]?[0-9]+)?/
                  @q << [:FLOATING_CONSTANT, Token.new($&, file, lineno, col)]
                # 整数定数
                when /\A\d+/
                  @q << [:INTEGER_CONSTANT, Token.new($&.to_i, file, lineno, col)]
                # 文字定数
                when /\A'(?:[^'\\]|\\.)'/
                  @q << [:CHARACTER_LITERAL, Token.new($&, file, lineno, col)]
                # 文字列
#                "#include  #include #include \"../systask/logtask.cfg\"       最後の " 忘れ)で無限ループ
#                when /\A"(?:[^"\\]+|\\.)*"/
                when /\A"(?:[^"\\]|\\.)*"/   # これはうまく行くようだ
                  @q << [:STRING_LITERAL, Token.new($&, file, lineno, col)]
                # 文字列 (改行あり)
                when /\A"(?:[^"\\]|\\.)*\\\n$/
                  string = $&
                  b_in_string = true
                # 文字列 (改行あり, escape なし)
                when /\A("(?:[^"\\]|\e\.)*)\n$/
                  string = $1 + "\\\n"
                  b_in_string = true
                  # この位置では error メソッドは使えない (token 読出し前) # mikan cdl_error ではない
                  puts "error: #{file} line #{lineno}: string literal has newline without escape"
                  @@n_error += 1
                # 山括弧で囲まれた文字列
                when /\A<[0-9A-Za-z_\. \/]+>/   # AB: angle bracke
                  @q << [:AB_STRING_LITERAL, Token.new($&, file, lineno, col)]
                # 行コメント
                when /\A\/\/.*$/
                  # 読み飛ばすだけ
                # コメント開始
                when /\A\/\*/
                  b_in_comment = true
                # '>>', '<<' など
                when /\A>>/, /\A<</, /\A==/, /\A!=/, /\A\&\&/, /\A\|\|/
                  @q << [$&, Token.new($&, file, lineno, col)]
                when /\A::/, /\A=>/, /\A<=/, /\A>=/
                  @q << [$&, Token.new($&, file, lineno, col)]
                # '(', ')' など一文字の記号、または未知の記号
                when /\A./
                  @q << [$&, Token.new($&, file, lineno, col)]
                else
                  raise
                end
              end

              line = $'
              col += $&.length
            end

            lineno += 1
          }

        rescue => evar
          Generator.error( "G1014 while open or reading \'$1\'" , file )
          if $debug then
            p puts( evar )
            pp $@
          end
        end
      }

      # 終了の印
      @q << nil

      @yydebug = true
      do_parse

    ensure
      @@generator_nest -= 1
      TECS_LANG::reset_kcode
    end

  end

  def next_token
    token = @q.shift

    if token then
      @@current_locale[@@generator_nest] = token[1].locale

      if token[0] == :IDENTIFIER then
        # TYPE_NAME トークンへ置換え
        if Namespace.is_typename?( token[1].val ) then
          token[0] = :TYPE_NAME
        elsif @in_specifier && RESERVED2[ token[1].val.to_s ] then
          # 指定子キーワード（ '[', ']' 内でのみ有効)
          token[0] = RESERVED2[ token[1].val.to_s ]
        end
      end

      if $debug then     # 070107 token 無効時ここを通さないようした (through 対応 -d の時に例外発生) 
        locale = @@current_locale[@@generator_nest]
        if token then
          print( "#{locale[0]}: line #{locale[1]} : #{token[0]} '#{token[1].val}'\n" )
        else
          print( "#{locale[0]}: line #{locale[1]} : EOF\n" )
        end
      end
    else
      token = [ false, false ]
    end

    token
  end

  def on_error(t, v, vstack)
    # p t, token_to_str(t), vstack
    if token_to_str(t) == "$end" then
      Generator.error( "G1015 Unexpected EOF"  )
    else
      Generator.error( "G1016 syntax error near \'$1\'" , v.val )
    end
  end

  def self.current_locale
    @@current_locale[ @@generator_nest ]
  end

  @@n_error = 0
  @@n_warning = 0

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でエラー発生は不適切）
  def self.error( msg, *arg )
    locale = nil
    self.error2( locale, msg, *arg )
  end

  def self.error2( locale, msg, *arg )
    @@n_error += 1

    msg = TECSMsg.get_error_message( msg )
    # $1, $2, ... を arg で置換
    count = 1
    arg.each{ |a|
      str = TECSIO.str_code_convert( msg, a.to_s )
      msg.sub!( /\$#{count}/, str )
      count += 1
    }

    # import_C の中でのエラー？
    if @@import_C then
      C_parser.error( msg )
    else

      # Node の記憶する 位置 (locale) を使用した場合、変更以前に比べ、
      # 問題発生箇所と異なる位置にエラーが出るため、構文解析中のエラー
      # は、解析中の位置を出力する．(new_XXX で owner が子要素のチェッ
      # クをすると owner の行番号が出てしまう点で、ずれが生じている)

      if @@b_end_all_parse == false || locale == nil then
        locale = @@current_locale[ @@generator_nest ]
      end
      if locale then
        Console.puts "error: #{locale[0]}: line #{locale[1]} #{msg}"
      else
        Console.puts "error: #{msg}"
      end
    end
  end

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でウォーニング発生は不適切）
  def self.warning( msg, *arg )
    locale = nil
    self.warning2( locale, msg, *arg )
  end

  def self.warning2( locale, msg, *arg )
    @@n_warning += 1

    msg = TECSMsg.get_warning_message( msg )
    # $1, $2, ... を arg で置換
    count = 1
    arg.each{ |a|
      str = TECSIO.str_code_convert( msg, a.to_s )
      msg.sub!( /\$#{count}/, str )
      count += 1
    }

    # import_C の中でのウォーニング？
    if @@import_C then
      C_parser.warning( msg )
    else
      if @@b_end_all_parse == false || locale == nil then
        locale = @@current_locale[ @@generator_nest ]
      end
      if locale then
        Console.puts "warning: #{locale[0]}: line #{locale[1]} #{msg}"
      else
        Console.puts "warning: #{msg}"
      end
    end
  end

  def self.get_n_error
    @@n_error
  end

  def self.get_n_warning
    @@n_warning
  end

  def self.get_nest
    @@generator_nest
  end

  #===  '[' specifier 始め
  def set_in_specifier
    # p "set_in_specifier"
    @in_specifier = true
  end

  #=== ']' specifier 終わり
  def unset_in_specifier
    # p "unset_in_specifier"
    @in_specifier = false
  end

  # statement_specifier は構文解釈途中で参照したいため
  @@statement_specifier_stack = []
  def self.add_statement_specifier( ss )
    if( @@statement_specifier_stack[ @@generator_nest ] == nil )then
      @@statement_specifier_stack[ @@generator_nest ] = [ ss ]
    else
      @@statement_specifier_stack[ @@generator_nest ] << ss
    end
  end


  def self.get_statement_specifier
    spec_list = @@statement_specifier_stack[ @@generator_nest ]
    @@statement_specifier_stack[ @@generator_nest ] = nil
    return spec_list
  end

  #=== すべての構文解析が完了したことを報告
  def self.end_all_parse
    @@b_end_all_parse = true
  end

..end tecslib/core/bnf.y.rb modeval..id5f5c9104bd

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 144, :_reduce_none,
 1, 146, :_reduce_2,
 1, 146, :_reduce_3,
 1, 146, :_reduce_4,
 1, 146, :_reduce_5,
 1, 146, :_reduce_6,
 1, 146, :_reduce_7,
 1, 146, :_reduce_8,
 1, 146, :_reduce_9,
 1, 146, :_reduce_10,
 3, 146, :_reduce_11,
 1, 148, :_reduce_none,
 2, 148, :_reduce_13,
 1, 150, :_reduce_none,
 4, 150, :_reduce_15,
 3, 150, :_reduce_16,
 3, 150, :_reduce_17,
 1, 151, :_reduce_none,
 2, 151, :_reduce_19,
 2, 151, :_reduce_20,
 4, 151, :_reduce_21,
 1, 152, :_reduce_22,
 1, 152, :_reduce_23,
 1, 152, :_reduce_24,
 1, 152, :_reduce_25,
 1, 152, :_reduce_26,
 1, 152, :_reduce_27,
 1, 153, :_reduce_none,
 4, 153, :_reduce_29,
 1, 155, :_reduce_none,
 3, 155, :_reduce_31,
 3, 155, :_reduce_32,
 3, 155, :_reduce_33,
 1, 156, :_reduce_none,
 3, 156, :_reduce_35,
 3, 156, :_reduce_36,
 1, 157, :_reduce_none,
 3, 157, :_reduce_38,
 3, 157, :_reduce_39,
 1, 158, :_reduce_none,
 3, 158, :_reduce_41,
 3, 158, :_reduce_42,
 3, 158, :_reduce_43,
 3, 158, :_reduce_44,
 1, 159, :_reduce_none,
 3, 159, :_reduce_46,
 3, 159, :_reduce_47,
 1, 160, :_reduce_none,
 3, 160, :_reduce_49,
 1, 161, :_reduce_none,
 3, 161, :_reduce_51,
 1, 162, :_reduce_none,
 3, 162, :_reduce_53,
 1, 163, :_reduce_none,
 3, 163, :_reduce_55,
 1, 164, :_reduce_none,
 3, 164, :_reduce_57,
 1, 165, :_reduce_none,
 5, 165, :_reduce_59,
 1, 149, :_reduce_60,
 1, 166, :_reduce_61,
 3, 167, :_reduce_62,
 1, 170, :_reduce_none,
 2, 170, :_reduce_64,
 1, 169, :_reduce_65,
 3, 169, :_reduce_66,
 1, 173, :_reduce_none,
 3, 173, :_reduce_68,
 1, 171, :_reduce_69,
 1, 171, :_reduce_70,
 1, 171, :_reduce_71,
 1, 171, :_reduce_none,
 1, 171, :_reduce_none,
 1, 171, :_reduce_74,
 1, 171, :_reduce_none,
 1, 171, :_reduce_none,
 1, 171, :_reduce_77,
 1, 171, :_reduce_78,
 1, 171, :_reduce_79,
 4, 171, :_reduce_80,
 1, 179, :_reduce_81,
 1, 179, :_reduce_82,
 1, 179, :_reduce_83,
 1, 180, :_reduce_84,
 1, 180, :_reduce_85,
 1, 180, :_reduce_86,
 1, 180, :_reduce_87,
 1, 180, :_reduce_88,
 1, 180, :_reduce_89,
 1, 180, :_reduce_90,
 1, 180, :_reduce_91,
 1, 180, :_reduce_92,
 1, 180, :_reduce_93,
 1, 180, :_reduce_94,
 1, 180, :_reduce_95,
 1, 180, :_reduce_96,
 1, 180, :_reduce_97,
 1, 180, :_reduce_98,
 1, 180, :_reduce_99,
 1, 180, :_reduce_100,
 1, 180, :_reduce_101,
 1, 180, :_reduce_102,
 1, 181, :_reduce_103,
 1, 181, :_reduce_104,
 2, 178, :_reduce_105,
 1, 178, :_reduce_none,
 0, 184, :_reduce_107,
 6, 176, :_reduce_108,
 0, 185, :_reduce_109,
 5, 176, :_reduce_110,
 2, 176, :_reduce_111,
 1, 183, :_reduce_none,
 2, 183, :_reduce_none,
 1, 182, :_reduce_114,
 3, 186, :_reduce_115,
 6, 186, :_reduce_116,
 1, 189, :_reduce_117,
 3, 189, :_reduce_118,
 1, 191, :_reduce_119,
 4, 191, :_reduce_120,
 4, 191, :_reduce_121,
 4, 191, :_reduce_122,
 1, 168, :_reduce_none,
 2, 168, :_reduce_124,
 1, 187, :_reduce_125,
 3, 187, :_reduce_126,
 1, 192, :_reduce_none,
 4, 177, :_reduce_none,
 5, 177, :_reduce_none,
 2, 177, :_reduce_none,
 1, 193, :_reduce_131,
 1, 193, :_reduce_132,
 1, 193, :_reduce_133,
 1, 193, :_reduce_134,
 1, 193, :_reduce_135,
 1, 193, :_reduce_136,
 1, 194, :_reduce_none,
 3, 194, :_reduce_none,
 1, 195, :_reduce_none,
 3, 195, :_reduce_none,
 1, 172, :_reduce_141,
 1, 172, :_reduce_142,
 2, 174, :_reduce_143,
 1, 174, :_reduce_none,
 1, 197, :_reduce_145,
 3, 197, :_reduce_146,
 4, 197, :_reduce_147,
 3, 197, :_reduce_148,
 4, 197, :_reduce_149,
 3, 197, :_reduce_150,
 1, 196, :_reduce_151,
 2, 196, :_reduce_152,
 2, 196, :_reduce_153,
 3, 196, :_reduce_154,
 1, 198, :_reduce_none,
 3, 198, :_reduce_none,
 1, 199, :_reduce_157,
 3, 199, :_reduce_158,
 3, 200, :_reduce_159,
 2, 200, :_reduce_160,
 1, 200, :_reduce_161,
 2, 200, :_reduce_162,
 3, 201, :_reduce_163,
 1, 202, :_reduce_164,
 3, 202, :_reduce_165,
 1, 203, :_reduce_166,
 1, 203, :_reduce_167,
 1, 203, :_reduce_168,
 4, 203, :_reduce_169,
 4, 203, :_reduce_170,
 1, 203, :_reduce_171,
 4, 203, :_reduce_172,
 4, 203, :_reduce_173,
 6, 203, :_reduce_174,
 4, 203, :_reduce_175,
 1, 203, :_reduce_176,
 1, 154, :_reduce_none,
 2, 154, :_reduce_178,
 1, 204, :_reduce_none,
 1, 204, :_reduce_none,
 2, 204, :_reduce_none,
 3, 205, :_reduce_182,
 2, 205, :_reduce_183,
 3, 205, :_reduce_184,
 3, 205, :_reduce_185,
 4, 205, :_reduce_186,
 2, 205, :_reduce_187,
 3, 205, :_reduce_none,
 3, 205, :_reduce_189,
 4, 205, :_reduce_190,
 1, 175, :_reduce_191,
 3, 175, :_reduce_192,
 4, 175, :_reduce_193,
 4, 175, :_reduce_194,
 1, 206, :_reduce_195,
 3, 206, :_reduce_196,
 2, 145, :_reduce_none,
 2, 145, :_reduce_none,
 0, 145, :_reduce_none,
 1, 207, :_reduce_none,
 4, 207, :_reduce_201,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 2, 209, :_reduce_none,
 2, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 209, :_reduce_none,
 1, 210, :_reduce_216,
 3, 210, :_reduce_217,
 4, 222, :_reduce_218,
 4, 222, :_reduce_219,
 1, 222, :_reduce_220,
 4, 222, :_reduce_221,
 1, 222, :_reduce_222,
 1, 222, :_reduce_223,
 1, 222, :_reduce_224,
 1, 222, :_reduce_225,
 6, 222, :_reduce_226,
 1, 223, :_reduce_227,
 3, 223, :_reduce_228,
 7, 226, :_reduce_229,
 10, 226, :_reduce_230,
 1, 212, :_reduce_231,
 5, 220, :_reduce_232,
 7, 220, :_reduce_233,
 5, 219, :_reduce_234,
 5, 219, :_reduce_235,
 9, 221, :_reduce_236,
 4, 211, :_reduce_237,
 7, 211, :_reduce_238,
 1, 228, :_reduce_none,
 4, 228, :_reduce_none,
 1, 227, :_reduce_241,
 3, 227, :_reduce_242,
 6, 213, :_reduce_243,
 1, 229, :_reduce_244,
 1, 230, :_reduce_none,
 2, 230, :_reduce_none,
 1, 147, :_reduce_247,
 2, 147, :_reduce_248,
 3, 147, :_reduce_249,
 6, 214, :_reduce_250,
 1, 231, :_reduce_251,
 1, 232, :_reduce_252,
 2, 232, :_reduce_253,
 3, 233, :_reduce_254,
 6, 233, :_reduce_255,
 6, 215, :_reduce_256,
 1, 234, :_reduce_257,
 1, 235, :_reduce_none,
 2, 235, :_reduce_none,
 1, 236, :_reduce_260,
 4, 236, :_reduce_261,
 1, 237, :_reduce_none,
 1, 237, :_reduce_none,
 1, 237, :_reduce_none,
 1, 237, :_reduce_none,
 1, 237, :_reduce_none,
 1, 238, :_reduce_267,
 3, 238, :_reduce_268,
 1, 244, :_reduce_269,
 4, 244, :_reduce_270,
 1, 244, :_reduce_271,
 1, 244, :_reduce_272,
 1, 244, :_reduce_273,
 1, 245, :_reduce_274,
 1, 245, :_reduce_275,
 3, 245, :_reduce_276,
 3, 245, :_reduce_277,
 5, 246, :_reduce_278,
 5, 246, :_reduce_279,
 4, 239, :_reduce_280,
 6, 239, :_reduce_281,
 7, 239, :_reduce_282,
 8, 239, :_reduce_283,
 1, 247, :_reduce_284,
 1, 247, :_reduce_285,
 1, 248, :_reduce_286,
 1, 249, :_reduce_none,
 1, 250, :_reduce_none,
 5, 240, :_reduce_289,
 1, 251, :_reduce_290,
 2, 251, :_reduce_291,
 1, 252, :_reduce_292,
 4, 252, :_reduce_293,
 1, 253, :_reduce_294,
 4, 253, :_reduce_295,
 5, 253, :_reduce_296,
 3, 254, :_reduce_297,
 1, 254, :_reduce_298,
 1, 255, :_reduce_none,
 5, 241, :_reduce_300,
 1, 256, :_reduce_301,
 2, 256, :_reduce_302,
 1, 257, :_reduce_303,
 4, 257, :_reduce_304,
 4, 258, :_reduce_305,
 5, 242, :_reduce_306,
 7, 242, :_reduce_307,
 5, 243, :_reduce_none,
 1, 259, :_reduce_309,
 1, 259, :_reduce_310,
 0, 260, :_reduce_none,
 2, 260, :_reduce_none,
 7, 261, :_reduce_313,
 9, 261, :_reduce_314,
 1, 262, :_reduce_none,
 1, 263, :_reduce_316,
 3, 263, :_reduce_317,
 1, 263, :_reduce_318,
 3, 263, :_reduce_319,
 0, 267, :_reduce_320,
 8, 216, :_reduce_321,
 4, 216, :_reduce_322,
 1, 264, :_reduce_323,
 1, 265, :_reduce_324,
 0, 266, :_reduce_none,
 2, 266, :_reduce_none,
 2, 266, :_reduce_none,
 4, 268, :_reduce_328,
 1, 268, :_reduce_329,
 3, 270, :_reduce_330,
 1, 270, :_reduce_331,
 6, 272, :_reduce_332,
 1, 224, :_reduce_333,
 1, 225, :_reduce_none,
 6, 271, :_reduce_335,
 7, 271, :_reduce_336,
 4, 271, :_reduce_337,
 6, 271, :_reduce_338,
 1, 273, :_reduce_none,
 6, 269, :_reduce_340,
 9, 269, :_reduce_341,
 9, 269, :_reduce_342,
 12, 269, :_reduce_343,
 1, 274, :_reduce_none,
 6, 217, :_reduce_345,
 1, 275, :_reduce_346,
 1, 276, :_reduce_none,
 2, 276, :_reduce_none,
 1, 277, :_reduce_349,
 4, 277, :_reduce_350,
 1, 278, :_reduce_none,
 1, 278, :_reduce_none,
 1, 278, :_reduce_none,
 1, 278, :_reduce_none,
 1, 279, :_reduce_355,
 4, 284, :_reduce_356,
 1, 284, :_reduce_357,
 1, 284, :_reduce_358,
 1, 284, :_reduce_359,
 1, 280, :_reduce_360,
 5, 281, :_reduce_361,
 1, 285, :_reduce_362,
 2, 285, :_reduce_363,
 0, 289, :_reduce_364,
 8, 282, :_reduce_365,
 4, 282, :_reduce_366,
 1, 286, :_reduce_367,
 1, 287, :_reduce_368,
 0, 288, :_reduce_none,
 2, 288, :_reduce_none,
 2, 288, :_reduce_none,
 6, 290, :_reduce_372,
 4, 290, :_reduce_373,
 6, 283, :_reduce_374,
 8, 283, :_reduce_375,
 1, 292, :_reduce_none,
 1, 293, :_reduce_none,
 1, 291, :_reduce_none,
 9, 218, :_reduce_379,
 6, 218, :_reduce_380,
 1, 294, :_reduce_none,
 3, 294, :_reduce_none,
 6, 297, :_reduce_383,
 3, 297, :_reduce_384,
 6, 297, :_reduce_385,
 3, 297, :_reduce_386,
 8, 297, :_reduce_387,
 4, 297, :_reduce_388,
 1, 297, :_reduce_389,
 1, 297, :_reduce_390,
 6, 297, :_reduce_391,
 4, 297, :_reduce_392,
 1, 295, :_reduce_393,
 0, 296, :_reduce_none,
 2, 296, :_reduce_none,
 2, 296, :_reduce_none,
 1, 299, :_reduce_none,
 4, 299, :_reduce_none,
 1, 300, :_reduce_399,
 2, 300, :_reduce_400,
 4, 301, :_reduce_401,
 1, 298, :_reduce_402,
 1, 188, :_reduce_403,
 1, 190, :_reduce_404,
 4, 208, :_reduce_none,
 2, 302, :_reduce_none,
 2, 302, :_reduce_none,
 0, 302, :_reduce_none,
 14, 303, :_reduce_409,
 2, 305, :_reduce_410,
 0, 305, :_reduce_411,
 6, 306, :_reduce_412,
 13, 304, :_reduce_413,
 5, 307, :_reduce_414,
 0, 307, :_reduce_415 ]

racc_reduce_n = 416

racc_shift_n = 858

clist = [
'8,477,241,764,659,589,695,55,313,179,55,55,55,151,260,263,265,269,272',
'276,281,285,103,255,694,216,846,103,103,271,274,280,283,290,254,258',
'226,783,718,154,215,819,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6',
'10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,698,347,444,471',
'90,21,25,31,36,40,46,51,60,845,219,220,103,103,554,103,103,103,103,103',
'8,160,160,160,160,44,50,56,160,64,67,55,75,241,4,208,210,194,809,101',
'198,199,201,204,101,101,160,63,63,63,71,80,80,80,103,160,160,155,160',
'160,28,91,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19',
'23,29,34,43,49,53,58,62,66,70,73,77,82,832,160,380,381,833,21,25,31',
'36,40,46,51,60,101,101,8,101,101,101,101,101,341,103,479,521,55,55,518',
'241,44,50,56,585,64,67,103,75,3,4,103,103,112,208,210,236,843,55,55',
'566,594,770,245,63,249,71,101,80,18,27,33,38,42,48,52,57,61,65,69,72',
'79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,371,564',
'565,160,584,21,25,31,36,40,46,51,60,605,441,8,654,842,784,51,60,592',
'767,787,223,545,55,101,101,44,50,56,307,64,67,788,75,151,4,382,383,101',
'208,210,236,101,101,55,675,606,241,245,63,249,71,222,80,18,27,33,38',
'42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58',
'62,66,70,73,77,82,179,362,673,777,215,21,25,31,36,40,46,51,60,55,227',
'114,114,525,379,255,674,110,110,377,378,112,112,547,559,44,50,56,675',
'64,67,322,75,826,4,776,214,797,260,263,265,269,272,276,281,285,228,255',
'63,524,71,103,80,271,274,280,283,290,254,258,208,210,236,554,825,255',
'692,653,796,245,615,249,550,614,342,260,263,265,269,272,276,281,285',
'743,255,551,684,179,103,440,271,274,280,283,290,254,258,691,652,122',
'125,128,130,132,134,136,175,338,615,174,434,614,286,677,439,724,208',
'210,194,255,439,198,199,201,204,333,334,335,337,441,540,442,277,260',
'263,265,269,272,276,281,285,433,255,556,652,557,103,101,271,274,280',
'283,290,254,258,260,263,265,269,272,276,281,285,151,255,837,730,805',
'103,179,271,274,280,283,290,254,258,379,384,385,386,387,377,378,101',
'260,263,265,269,272,276,281,285,838,255,806,560,188,103,179,271,274',
'280,283,290,254,258,138,139,121,123,126,129,131,133,135,450,451,453',
'260,263,265,269,272,276,281,285,532,255,811,389,388,103,812,271,274',
'280,283,290,254,258,539,101,122,125,128,130,132,134,136,581,179,179',
'179,260,263,265,269,272,276,281,285,534,255,101,638,369,103,583,271',
'274,280,283,290,254,258,533,114,582,181,465,749,114,110,379,366,367',
'368,110,377,378,530,112,750,101,18,27,33,38,42,48,52,57,61,65,69,72',
'79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,101,384',
'385,386,387,21,25,31,36,40,46,51,60,260,263,265,269,272,276,281,285',
'395,255,396,175,397,103,174,271,274,280,283,290,254,258,101,260,263',
'265,269,272,276,281,285,573,255,450,451,453,103,575,271,274,280,283',
'290,254,258,260,263,265,269,272,276,281,285,529,255,167,168,579,103',
'528,271,274,280,283,290,254,258,260,263,265,269,272,276,281,285,523',
'255,411,412,414,103,517,271,274,280,283,290,254,258,413,415,416,418',
'420,421,260,263,265,269,272,276,281,285,255,255,599,233,513,103,101',
'271,274,280,283,290,254,258,255,260,263,265,269,272,276,281,285,591',
'255,512,661,241,103,101,271,274,280,283,290,254,258,260,263,265,269',
'272,276,281,285,160,255,493,727,573,103,101,271,274,280,283,290,254',
'258,260,263,265,269,272,276,281,285,604,255,411,412,414,103,101,271',
'274,280,283,290,254,258,413,415,416,418,420,421,260,263,265,269,272',
'276,281,285,490,255,232,233,607,103,101,271,274,280,283,290,254,258',
'489,260,263,265,269,272,276,281,285,488,255,407,408,179,103,101,271',
'274,280,283,290,254,258,260,263,265,269,272,276,281,285,484,255,380',
'381,482,103,101,271,274,280,283,290,254,258,260,263,265,269,272,276',
'281,285,480,255,380,381,474,103,101,271,274,280,283,290,254,258,384',
'385,386,387,382,383,260,263,265,269,272,276,281,285,160,255,382,383',
'473,103,101,271,274,280,283,290,254,258,472,260,263,265,269,272,276',
'281,285,466,255,744,562,608,103,101,271,274,280,283,290,254,258,260',
'263,265,269,272,276,281,285,391,255,382,383,609,103,101,271,274,280',
'283,290,254,258,260,263,265,269,272,276,281,285,140,255,382,383,394',
'103,101,271,274,280,283,290,254,258,561,562,389,388,443,390,260,263',
'265,269,272,276,281,285,399,255,610,390,437,103,101,271,274,280,283',
'290,254,258,436,260,263,265,269,272,276,281,285,435,255,432,431,430',
'103,101,271,274,280,283,290,254,258,260,263,265,269,272,276,281,285',
'400,255,623,426,422,103,101,271,274,280,283,290,254,258,260,263,265',
'269,272,276,281,285,410,255,409,400,399,103,101,271,274,280,283,290',
'254,258,398,631,390,632,633,634,260,263,265,269,272,276,281,285,635',
'255,637,638,394,103,101,271,274,280,283,290,254,258,641,260,263,265',
'269,272,276,281,285,391,255,390,160,376,103,101,271,274,280,283,290',
'254,258,260,263,265,269,272,276,281,285,373,255,364,179,649,103,101',
'271,274,280,283,290,254,258,260,263,265,269,272,276,281,285,338,255',
'650,651,356,103,101,271,274,280,283,290,254,258,355,655,179,114,333',
'334,335,337,286,110,657,114,114,112,658,354,521,110,110,518,101,112',
'112,353,351,664,112,665,277,260,263,265,269,272,276,281,285,666,255',
'667,668,669,103,101,271,274,280,283,290,254,258,114,286,114,114,671',
'114,110,147,110,110,112,110,112,112,101,112,676,346,678,490,682,277',
'260,263,265,269,272,276,281,285,339,255,331,687,255,103,101,271,274',
'280,283,290,254,258,260,263,265,269,272,276,281,285,688,255,322,319',
'690,103,318,271,274,280,283,290,254,258,122,125,128,130,132,134,136',
'260,263,265,269,272,276,281,285,693,255,151,316,315,103,101,271,274',
'280,283,290,254,258,255,286,252,699,700,63,322,260,263,265,269,272,276',
'281,285,703,255,704,112,706,103,277,271,274,280,283,290,254,258,114',
'231,114,114,708,230,110,101,110,110,112,573,112,112,712,260,263,265',
'269,272,276,281,285,229,255,225,613,715,103,101,271,274,280,283,290',
'254,258,122,125,128,130,132,134,136,260,263,265,269,272,276,281,285',
'716,255,717,224,221,103,101,271,274,280,283,290,254,258,213,721,722',
'147,725,193,192,260,263,265,269,272,276,281,393,191,255,732,734,735',
'103,101,271,274,280,283,290,254,258,260,263,265,269,272,276,281,285',
'736,255,190,292,738,103,739,271,274,280,283,290,254,258,740,741,742',
'189,186,745,748,101,260,263,265,269,272,276,281,285,185,255,751,752',
'753,103,754,271,274,280,283,290,254,258,755,756,184,594,671,151,101',
'260,263,265,269,272,276,281,285,762,255,763,183,765,103,766,271,274',
'280,283,290,254,258,182,678,208,210,194,773,101,198,199,201,204,774',
'178,177,260,263,265,269,272,276,281,285,176,255,173,780,166,103,101',
'271,274,280,283,290,254,258,260,263,265,269,272,276,281,285,165,255',
'161,160,785,103,159,271,274,280,283,290,254,258,101,260,263,265,269',
'272,276,281,285,158,255,789,727,790,103,791,271,274,280,283,290,254',
'258,-378,792,793,794,745,153,101,260,263,265,269,272,276,281,285,798',
'255,799,151,255,103,802,271,274,280,283,290,254,258,147,260,263,265',
'269,272,276,281,285,146,255,145,807,101,103,142,271,274,280,283,290',
'254,258,260,263,265,269,272,276,281,285,810,255,140,814,101,103,119',
'271,274,280,283,290,254,258,816,260,263,265,269,272,276,281,285,817',
'255,818,613,101,103,109,271,274,280,283,290,254,258,820,106,822,823',
'99,260,263,265,269,272,276,281,285,98,255,827,828,788,103,101,271,274',
'280,283,290,254,258,829,260,263,265,269,272,276,281,285,830,255,241',
'97,834,103,101,271,274,280,283,290,254,258,260,263,265,269,272,276,281',
'285,835,255,95,839,840,103,101,271,274,280,283,290,254,258,94,93,92',
'848,849,850,86,286,621,852,853,854,855,84,857,101,260,263,265,269,272',
'276,281,285,,255,,277,,103,,271,274,280,283,290,254,258,,,,,101,260',
'263,265,269,272,276,281,285,,255,,,,103,,271,274,280,283,290,254,258',
'101,138,139,121,123,126,129,131,133,135,,260,263,265,269,272,276,281',
'285,,255,,101,,103,286,271,274,280,283,290,254,258,,,,,,,,,,,,,277,',
',,,,,286,,,,,,,,101,260,263,265,269,272,276,281,285,,255,,277,,103,',
'271,274,280,283,290,254,258,,,,,101,260,263,265,269,272,276,281,285',
',255,,,,103,,271,274,280,283,290,254,258,260,263,265,269,272,276,281',
'285,,255,101,,,103,,271,274,280,283,290,254,258,260,263,265,269,272',
'276,281,285,,255,,,,103,,271,274,280,283,290,254,258,,,260,263,265,269',
'272,276,281,285,,255,,,,103,101,271,274,280,283,290,254,258,72,79,83',
'6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,101,,,,,,,,,286,,,,,',
',,,,,,,101,,,,,,,277,260,263,265,269,272,276,281,285,,255,,,,103,101',
'271,274,280,283,290,254,258,,,,,,,,,,,,,,,,,101,,,18,27,33,38,42,48',
'52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66',
'70,73,77,82,,,,,,21,25,31,36,40,46,51,60,260,263,265,269,272,276,281',
'285,,255,,,,103,,271,274,280,283,290,254,258,101,260,263,265,269,272',
'276,281,285,,255,,,,103,,271,274,280,283,290,254,258,260,263,265,269',
'272,276,281,285,,255,,,,103,,271,274,280,283,290,254,258,260,263,265',
'269,272,276,281,285,,255,,,,103,,271,274,280,283,290,254,258,,,,,,,',
',,,,,,,,,,,,,101,,,,,,,,,,,,,,,,,,,,,,,101,,,,,,,,,,,521,619,,617,,',
',,,,112,101,,,,,,,,,,,,,,,,,,,,,,101,18,27,33,38,42,48,52,57,61,65,69',
'72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,301',
',55,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48',
'52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66',
'70,73,77,82,686,,55,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,,,18',
'27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43',
'49,53,58,62,66,70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,,,,',
',,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23',
'29,34,43,49,53,58,62,66,70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,535',
',,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14',
'16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,55,458,,,,21,25,31,36,40',
'46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83',
'6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,55,555,,,,21',
'25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57,61,65',
'69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82',
'55,600,,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48',
'52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66',
'70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33',
'38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53',
'58,62,66,70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,',
',,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34',
'43,49,53,58,62,66,70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,',
',,,,,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19',
'23,29,34,43,49,53,58,62,66,70,73,77,82,55,567,,,,21,25,31,36,40,46,51',
'60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10',
'11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,55,,,,,21,25,31,36',
'40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79',
'83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,104,577,',
',,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42,48,52,57',
'61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73',
'77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18,27,33,38,42',
'48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62',
'66,70,73,77,82,55,427,,,,21,25,31,36,40,46,51,60,,,,,,,,,,,,,,,,,,,18',
'27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43',
'49,53,58,62,66,70,73,77,82,55,,,,,21,25,31,36,40,46,51,60,,,,,,,,,,',
',,,,,,,,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23',
'29,34,43,49,53,58,62,66,70,73,77,82,,,,,,21,25,31,36,40,46,51,60,18',
'27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43',
'49,53,58,62,66,70,73,77,82,,,,,,21,25,31,36,40,46,51,60,18,27,33,38',
'42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58',
'62,66,70,73,77,82,,,,,,21,25,31,36,40,46,51,60,18,27,33,38,42,48,52',
'57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70',
'73,77,82,,,,,,21,25,31,36,40,46,51,60,18,27,33,38,42,48,52,57,61,65',
'69,72,79,83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82',
',,,,,21,25,31,36,40,46,51,60,18,27,33,38,42,48,52,57,61,65,69,72,79',
'83,6,10,11,14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,,,,,,21,25',
'31,36,40,46,51,60,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11',
'14,16,19,23,29,34,43,49,53,58,62,66,70,73,77,82,,,,,,21,25,31,36,40',
'46,51,60,18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19',
'23,29,34,43,49,53,58,62,66,70,73,77,82,,,,,,21,25,31,36,40,46,51,60',
'18,27,33,38,42,48,52,57,61,65,69,72,79,83,6,10,11,14,16,19,23,29,34',
'43,49,53,58,62,66,70,73,77,82,,,,,,21,25,31,36,40,46' ]
racc_action_table = arr = Array.new(3860, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'2,350,792,729,580,478,629,145,182,552,636,2,325,182,529,529,529,529',
'529,529,529,529,245,529,628,150,841,529,534,529,529,529,529,529,529',
'529,156,757,663,98,212,803,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2',
'2,2,2,2,2,2,2,2,2,2,2,2,636,212,325,340,13,2,2,2,2,2,2,2,2,841,150,150',
'533,674,552,351,721,787,221,583,165,729,580,478,350,2,2,2,629,2,2,165',
'2,487,2,145,145,145,792,245,145,145,145,145,529,534,628,636,2,325,2',
'636,2,325,63,757,663,98,156,803,2,13,165,165,165,165,165,165,165,165',
'165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165',
'165,165,165,165,165,165,165,165,825,340,259,259,825,165,165,165,165',
'165,165,165,165,533,674,180,351,721,787,221,583,199,472,352,522,238',
'180,522,238,165,165,165,476,165,165,202,165,1,165,219,99,112,487,487',
'487,836,481,733,460,481,733,487,165,487,165,63,165,180,180,180,180,180',
'180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180',
'180,180,180,180,180,180,180,180,180,180,180,238,460,460,352,476,180',
'180,180,180,180,180,180,180,492,573,234,573,836,759,112,112,481,733',
'763,153,435,234,199,472,180,180,180,177,180,180,763,180,177,180,261',
'261,202,238,238,238,219,99,166,759,492,166,238,180,238,180,153,180,234',
'234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234',
'234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,452,234',
'598,746,148,234,234,234,234,234,234,234,234,200,157,105,114,405,499',
'436,598,105,114,499,499,105,114,438,452,234,234,234,598,234,234,439',
'234,813,234,746,148,781,675,675,675,675,675,675,675,675,157,675,234',
'405,234,675,234,675,675,675,675,675,675,675,166,166,166,445,813,432',
'625,571,781,166,620,166,442,620,200,614,614,614,614,614,614,614,614',
'702,614,444,614,670,614,321,614,614,614,614,614,614,614,625,571,445',
'445,445,445,445,445,445,172,465,520,172,314,520,675,603,702,670,200',
'200,200,430,321,200,200,200,200,465,465,465,465,322,429,322,675,394',
'394,394,394,394,394,394,394,314,394,450,603,451,394,675,394,394,394',
'394,394,394,394,805,805,805,805,805,805,805,805,433,805,829,675,789',
'805,137,805,805,805,805,805,805,805,498,506,506,506,506,498,498,614',
'441,441,441,441,441,441,441,441,829,441,789,453,137,441,417,441,441',
'441,441,441,441,441,78,78,78,78,78,78,78,78,78,327,327,327,798,798,798',
'798,798,798,798,798,417,798,796,267,267,798,796,798,798,798,798,798',
'798,798,427,394,78,78,78,78,78,78,78,475,124,336,426,393,393,393,393',
'393,393,393,393,420,393,805,712,237,393,475,393,393,393,393,393,393',
'393,418,115,475,124,336,712,423,115,257,237,237,237,423,257,257,414',
'423,712,441,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393',
'393,393,798,264,264,264,264,393,393,393,393,393,393,393,393,391,391',
'391,391,391,391,391,391,275,391,275,117,275,391,117,391,391,391,391',
'391,391,391,393,389,389,389,389,389,389,389,389,466,389,559,559,559',
'389,467,389,389,389,389,389,389,389,395,395,395,395,395,395,395,395',
'412,395,111,111,471,395,411,395,395,395,395,395,395,395,388,388,388',
'388,388,388,388,388,404,388,294,294,294,388,402,388,388,388,388,388',
'388,388,294,294,294,294,294,294,788,788,788,788,788,788,788,788,398',
'788,483,483,397,788,391,788,788,788,788,788,788,788,479,581,581,581',
'581,581,581,581,581,480,581,396,581,376,581,389,581,581,581,581,581',
'581,581,784,784,784,784,784,784,784,784,375,784,374,784,488,784,395',
'784,784,784,784,784,784,784,387,387,387,387,387,387,387,387,491,387',
'532,532,532,387,388,387,387,387,387,387,387,387,532,532,532,532,532',
'532,560,560,560,560,560,560,560,560,373,560,163,163,494,560,788,560',
'560,560,560,560,560,560,371,213,213,213,213,213,213,213,213,369,213',
'288,288,365,213,581,213,213,213,213,213,213,213,386,386,386,386,386',
'386,386,386,362,386,500,500,359,386,784,386,386,386,386,386,386,386',
'762,762,762,762,762,762,762,762,353,762,501,501,345,762,387,762,762',
'762,762,762,762,762,507,507,507,507,502,502,408,408,408,408,408,408',
'408,408,344,408,503,503,342,408,560,408,408,408,408,408,408,408,341',
'855,855,855,855,855,855,855,855,338,855,705,705,509,855,213,855,855',
'855,855,855,855,855,384,384,384,384,384,384,384,384,510,384,504,504',
'511,384,386,384,384,384,384,384,384,384,756,756,756,756,756,756,756',
'756,319,756,505,505,515,756,762,756,756,756,756,756,756,756,455,455',
'508,508,324,324,755,755,755,755,755,755,755,755,516,755,514,514,318',
'755,408,755,755,755,755,755,755,755,317,383,383,383,383,383,383,383',
'383,316,383,312,308,306,383,855,383,383,383,383,383,383,383,382,382',
'382,382,382,382,382,382,526,382,527,302,295,382,384,382,382,382,382',
'382,382,382,381,381,381,381,381,381,381,381,293,381,291,282,278,381',
'756,381,381,381,381,381,381,381,277,541,542,543,544,545,380,380,380',
'380,380,380,380,380,546,380,549,550,273,380,755,380,380,380,380,380',
'380,380,554,750,750,750,750,750,750,750,750,270,750,268,266,249,750',
'383,750,750,750,750,750,750,750,379,379,379,379,379,379,379,379,243',
'379,236,563,565,379,382,379,379,379,379,379,379,379,749,749,749,749',
'749,749,749,749,197,749,566,567,225,749,381,749,749,749,749,749,749',
'749,224,575,576,298,197,197,197,197,750,298,577,233,630,298,579,223',
'403,233,630,403,380,233,630,222,220,584,403,587,750,378,378,378,378',
'378,378,378,378,588,378,589,590,592,378,750,378,378,378,378,378,378',
'378,360,749,168,74,593,644,360,215,168,74,360,644,168,74,379,644,600',
'205,604,607,612,749,742,742,742,742,742,742,742,742,198,742,194,616',
'190,742,749,742,742,742,742,742,742,742,377,377,377,377,377,377,377',
'377,618,377,189,187,624,377,186,377,377,377,377,377,377,377,310,310',
'310,310,310,310,310,178,178,178,178,178,178,178,178,626,178,185,184',
'183,178,378,178,178,178,178,178,178,178,633,742,171,637,638,639,641',
'557,557,557,557,557,557,557,557,642,557,643,169,646,557,742,557,557',
'557,557,557,557,557,328,162,562,305,649,161,328,742,562,305,328,652',
'562,305,654,617,617,617,617,617,617,617,617,160,617,155,617,659,617',
'377,617,617,617,617,617,617,617,188,188,188,188,188,188,188,556,556',
'556,556,556,556,556,556,661,556,662,154,152,556,178,556,556,556,556',
'556,556,556,147,667,668,146,671,144,143,271,271,271,271,271,271,271',
'271,141,271,679,681,683,271,557,271,271,271,271,271,271,271,174,174',
'174,174,174,174,174,174,685,174,139,174,696,174,697,174,174,174,174',
'174,174,174,698,699,700,138,136,708,709,617,477,477,477,477,477,477',
'477,477,135,477,713,715,717,477,718,477,477,477,477,477,477,477,719',
'720,134,723,724,725,556,691,691,691,691,691,691,691,691,727,691,728',
'128,730,691,731,691,691,691,691,691,691,691,125,734,464,464,464,737',
'271,464,464,464,464,741,123,122,399,399,399,399,399,399,399,399,118',
'399,116,754,108,399,174,399,399,399,399,399,399,399,230,230,230,230',
'230,230,230,230,107,230,104,102,761,230,101,230,230,230,230,230,230',
'230,477,673,673,673,673,673,673,673,673,100,673,764,673,765,673,767',
'673,673,673,673,673,673,673,770,771,772,774,777,97,691,400,400,400,400',
'400,400,400,400,782,400,783,95,785,400,786,400,400,400,400,400,400,400',
'91,517,517,517,517,517,517,517,517,90,517,85,790,399,517,82,517,517',
'517,517,517,517,517,666,666,666,666,666,666,666,666,794,666,80,797,230',
'666,75,666,666,666,666,666,666,666,799,518,518,518,518,518,518,518,518',
'800,518,801,518,673,518,71,518,518,518,518,518,518,518,804,67,808,809',
'57,525,525,525,525,525,525,525,525,56,525,815,816,817,525,400,525,525',
'525,525,525,525,525,819,665,665,665,665,665,665,665,665,821,665,823',
'50,826,665,517,665,665,665,665,665,665,665,528,528,528,528,528,528,528',
'528,827,528,44,830,831,528,666,528,528,528,528,528,528,528,28,26,22',
'843,844,846,4,525,525,849,850,851,853,3,856,518,173,173,173,173,173',
'173,173,173,,173,,525,,173,,173,173,173,173,173,173,173,,,,,525,810',
'810,810,810,810,810,810,810,,810,,,,810,,810,810,810,810,810,810,810',
'665,181,181,181,181,181,181,181,181,181,,848,848,848,848,848,848,848',
'848,,848,,528,,848,173,848,848,848,848,848,848,848,,,,,,,,,,,,,173,',
',,,,,810,,,,,,,,173,530,530,530,530,530,530,530,530,,530,,810,,530,',
'530,530,530,530,530,530,530,,,,,810,655,655,655,655,655,655,655,655',
',655,,,,655,,655,655,655,655,655,655,655,650,650,650,650,650,650,650',
'650,,650,848,,,650,,650,650,650,650,650,650,650,286,286,286,286,286',
'286,286,286,,286,,,,286,,286,286,286,286,286,286,286,,,837,837,837,837',
'837,837,837,837,,837,,,,837,530,837,837,837,837,837,837,837,47,47,47',
'47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,655,,,,,,,,,286,,,,',
',,,,,,,,650,,,,,,,286,285,285,285,285,285,285,285,285,,285,,,,285,286',
'285,285,285,285,285,285,285,,,,,,,,,,,,,,,,,837,,,285,285,285,285,285',
'285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285',
'285,285,285,285,285,285,285,285,285,285,285,,,,,,285,285,285,285,285',
'285,285,285,407,407,407,407,407,407,407,407,,407,,,,407,,407,407,407',
'407,407,407,407,285,284,284,284,284,284,284,284,284,,284,,,,284,,284',
'284,284,284,284,284,284,623,623,623,623,623,623,623,623,,623,,,,623',
',623,623,623,623,623,623,623,385,385,385,385,385,385,385,385,,385,,',
',385,,385,385,385,385,385,385,385,,,,,,,,,,,,,,,,,,,,,407,,,,,,,,,,',
',,,,,,,,,,,,284,,,,,,,,,,,521,521,,521,,,,,,,521,623,,,,,,,,,,,,,,,',
',,,,,,385,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521',
'521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521',
'521,175,,175,,,521,521,521,521,521,521,521,521,,,,,,,,,,,,,,,,,,,,,175',
'175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175',
'175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,615,,615',
',,175,175,175,175,175,175,175,175,,,,,,,,,,,,,,,,,,,,,615,615,615,615',
'615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615',
'615,615,615,615,615,615,615,615,615,615,615,615,422,,,,,615,615,615',
'615,615,615,615,615,,,,,,,,,,,,,,,,,,,422,422,422,422,422,422,422,422',
'422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422',
'422,422,422,422,422,422,422,422,329,,,,,422,422,422,422,422,422,422',
'422,422,,,,,,,,,,,,,,,,,,329,329,329,329,329,329,329,329,329,329,329',
'329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329',
'329,329,329,329,329,449,329,,,,329,329,329,329,329,329,329,329,,,,,',
',,,,,,,,,,,,,449,449,449,449,449,449,449,449,449,449,449,449,449,449',
'449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449',
'449,449,486,449,,,,449,449,449,449,449,449,449,449,,,,,,,,,,,,,,,,,',
',486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486',
'486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,193',
'486,,,,486,486,486,486,486,486,486,486,,,,,,,,,,,,,,,,,,,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,326,,,,,193,193',
'193,193,193,193,193,193,,,,,,,,,,,,,,,,,,,326,326,326,326,326,326,326',
'326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326',
'326,326,326,326,326,326,326,326,326,339,,,,,326,326,326,326,326,326',
'326,326,,,,,,,,,,,,,,,,,,,339,339,339,339,339,339,339,339,339,339,339',
'339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339',
'339,339,339,339,339,462,,,,,339,339,339,339,339,339,339,339,,,,,,,,',
',,,,,,,,,,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462',
'462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462',
'462,176,462,,,,462,462,462,462,462,462,462,462,,,,,,,,,,,,,,,,,,,176',
'176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176',
'176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,469,,,,',
'176,176,176,176,176,176,176,176,,,,,,,,,,,,,,,,,,,469,469,469,469,469',
'469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469',
'469,469,469,469,469,469,469,469,469,469,469,64,469,,,,469,469,469,469',
'469,469,469,469,,,,,,,,,,,,,,,,,,,64,64,64,64,64,64,64,64,64,64,64,64',
'64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,303,',
',,,64,64,64,64,64,64,64,64,,,,,,,,,,,,,,,,,,,303,303,303,303,303,303',
'303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303',
'303,303,303,303,303,303,303,303,303,303,331,303,,,,303,303,303,303,303',
'303,303,303,,,,,,,,,,,,,,,,,,,331,331,331,331,331,331,331,331,331,331',
'331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331',
'331,331,331,331,331,331,364,,,,,331,331,331,331,331,331,331,331,,,,',
',,,,,,,,,,,,,,364,364,364,364,364,364,364,364,364,364,364,364,364,364',
'364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364',
'364,364,,,,,,364,364,364,364,364,364,364,364,538,538,538,538,538,538',
'538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538',
'538,538,538,538,538,538,538,538,538,538,,,,,,538,538,538,538,538,538',
'538,538,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656',
'656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656',
'656,,,,,,656,656,656,656,656,656,656,656,297,297,297,297,297,297,297',
'297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297',
'297,297,297,297,297,297,297,297,297,,,,,,297,297,297,297,297,297,297',
'297,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
',,,,,231,231,231,231,231,231,231,231,558,558,558,558,558,558,558,558',
'558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558',
'558,558,558,558,558,558,558,558,,,,,,558,558,558,558,558,558,558,558',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,',
',,,9,9,9,9,9,9,9,9,648,648,648,648,648,648,648,648,648,648,648,648,648',
'648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648',
'648,648,648,,,,,,648,648,648,648,648,648,648,648,300,300,300,300,300',
'300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300',
'300,300,300,300,300,300,300,300,300,300,300,,,,,,300,300,300,300,300',
'300' ]
racc_action_check = arr = Array.new(3860, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
   nil,   211,    -1,  1877,  1855,   nil,   nil,   nil,   nil,  3681,
   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  1826,   nil,   nil,   nil,  1825,   nil,  1788,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  1843,   nil,   nil,  2053,   nil,   nil,
  1822,   nil,   nil,   nil,   nil,   nil,  1796,  1787,   nil,   nil,
   nil,   nil,   nil,   118,  3213,   nil,   nil,  1778,   nil,   nil,
   nil,  1769,   nil,   nil,  1308,  1746,   nil,   nil,   468,   nil,
  1742,   nil,  1724,   nil,   nil,  1659,   nil,   nil,   nil,   nil,
  1657,  1709,   nil,   nil,   nil,  1698,   nil,  1689,    28,   199,
  1666,  1649,  1550,   nil,  1582,   360,   nil,  1582,  1564,   nil,
   nil,   714,   196,   nil,   361,   626,  1596,   701,  1560,   nil,
   nil,   nil,  1618,  1617,   596,  1605,   nil,   nil,  1594,   nil,
   nil,   nil,   nil,   nil,  1578,  1562,  1550,   514,  1549,  1534,
   nil,  1443,   nil,  1434,  1433,    -5,  1492,  1462,   317,   nil,
   -52,   nil,  1453,   278,  1483,  1453,    26,   328,   nil,   nil,
  1446,  1434,  1426,   859,   nil,    98,   299,   nil,  1307,  1408,
   nil,  1401,   455,  1878,  1531,  2443,  3085,   286,  1385,   nil,
   188,  1833,    -2,  1384,  1383,  1382,  1357,  1237,  1342,  1353,
  1337,   nil,   nil,  2829,  1270,   nil,   nil,  1152,  1268,   180,
   355,   nil,   194,   nil,   nil,  1255,   nil,   nil,   nil,   nil,
   nil,   nil,    -1,   910,   nil,  1306,   nil,   nil,   nil,   198,
  1278,    82,  1275,  1238,  1223,  1213,   nil,   nil,   nil,   nil,
  1648,  3589,   nil,  1265,   278,   nil,  1153,   527,   187,   nil,
   nil,   nil,   nil,  1096,   nil,     7,   nil,   nil,   nil,  1195,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   623,   nil,   156,
   nil,   277,   nil,   nil,   659,   nil,  1097,   556,  1196,   nil,
  1187,  1509,   nil,  1152,   nil,   695,   nil,  1159,  1123,   nil,
   nil,   nil,  1121,   nil,  2264,  2154,  2059,   nil,   885,   nil,
   nil,  1143,   nil,  1144,   698,  1095,   nil,  3543,  1257,   nil,
  3773,   nil,  1022,  3277,   nil,  1432,  1073,   nil,  1103,   nil,
  1247,   nil,  1071,   nil,   458,   nil,  1069,  1060,  1081,  1044,
   nil,   437,   475,   nil,  1067,     0,  2893,   496,  1429,  2637,
   nil,  3341,   nil,   nil,   nil,   nil,   597,   nil,  1006,  2957,
    64,   964,   956,   nil,   881,   953,   nil,   nil,   nil,   nil,
    -8,    79,   156,   954,   nil,   nil,   nil,   nil,   nil,   936,
  1305,   nil,   902,   nil,  3405,   911,   nil,   nil,   nil,   911,
   nil,   871,   nil,   882,   834,   736,   814,  1356,  1290,  1217,
  1172,  1144,  1122,  1100,  1027,  2308,   932,   859,   764,   720,
   nil,   697,   nil,   610,   489,   742,   812,   791,   791,  1626,
  1700,   nil,   770,  1270,   764,   330,   nil,  2241,   982,   nil,
   nil,   749,   743,   nil,   640,   nil,   nil,   544,   625,   nil,
   611,   nil,  2573,   631,   nil,   nil,   598,   559,   nil,   448,
   466,   nil,   412,   506,   nil,   278,   362,   nil,   305,   374,
   nil,   541,   415,   nil,   403,   324,   nil,   nil,   nil,  2701,
   492,   494,   341,   545,   nil,  1033,   nil,   nil,   nil,   nil,
   143,   nil,  3021,   nil,  1497,   368,   715,   657,   nil,  3149,
   nil,   741,   181,   nil,   nil,   596,   191,  1561,    -9,   805,
   785,   208,   nil,   764,   nil,   nil,  2765,    97,   836,   nil,
   nil,   855,   237,   nil,   770,   nil,   nil,   nil,   516,   353,
   924,   946,   956,   968,  1013,  1035,   508,   950,  1043,  1009,
  1019,  1028,   nil,   nil,  1079,  1029,  1052,  1723,  1768,   nil,
   457,  2377,   189,   nil,   nil,  1795,  1096,  1095,  1840,    12,
  1988,   nil,   793,    76,    13,   nil,   nil,   nil,  3451,   nil,
   nil,  1159,  1159,  1161,  1131,  1163,  1172,   nil,   nil,  1171,
  1171,   nil,    -4,   nil,  1187,   nil,  1480,  1414,  3635,   654,
   887,   nil,  1431,  1217,   nil,  1189,  1242,  1212,   nil,   nil,
   nil,   415,   nil,   266,   nil,  1255,  1252,  1233,   nil,  1237,
   -10,   815,   nil,    83,  1248,   nil,   nil,  1281,  1259,  1287,
  1293,   nil,  1264,  1189,   nil,   nil,   nil,   nil,   344,   nil,
  1290,   nil,   nil,   461,  1317,   nil,   nil,  1318,   nil,   nil,
   nil,   nil,  1321,   nil,   431,  2509,  1337,  1451,  1356,   nil,
   419,   nil,   nil,  2286,  1360,   414,  1385,   nil,    14,    -4,
  1266,   nil,   nil,  1398,   nil,   nil,    -2,  1398,  1398,  1286,
   nil,  1400,  1414,  1416,  1310,   nil,  1418,   nil,  3727,  1366,
  2037,   nil,  1434,   nil,  1437,  2015,  3497,   nil,   nil,  1450,
   nil,  1450,  1479,    24,   nil,  1818,  1745,  1374,  1466,   nil,
   432,  1499,   nil,  1671,    77,   394,   nil,   nil,   nil,  1481,
   nil,  1508,   nil,  1510,   nil,  1531,   nil,   nil,   nil,   nil,
   nil,  1590,   nil,   nil,   nil,   nil,  1505,  1537,  1515,  1541,
  1515,   nil,   431,   nil,   nil,   977,   nil,   nil,  1549,  1551,
   nil,   nil,   609,  1563,   nil,  1534,   nil,  1535,  1562,  1544,
  1545,    80,   nil,  1573,  1460,  1575,   nil,  1558,  1589,   -11,
  1590,  1566,   nil,   209,  1600,   nil,   nil,  1609,   nil,   nil,
   nil,  1611,  1334,   nil,   nil,   nil,   316,   nil,   nil,  1239,
  1195,   nil,   nil,   nil,  1599,  1077,  1049,    23,   nil,   270,
   nil,  1621,   954,   257,  1668,  1670,   nil,  1647,   nil,   nil,
  1564,  1565,  1657,   nil,  1683,   nil,   nil,  1688,   nil,   nil,
   nil,   385,  1669,  1697,   837,  1703,  1676,    81,   792,   513,
  1696,   nil,   -13,   nil,  1713,   nil,   576,  1718,   575,  1759,
  1765,  1770,   nil,    27,  1752,   511,   nil,   nil,  1754,  1781,
  1905,   nil,   nil,   381,   nil,  1797,  1732,  1767,   nil,  1804,
   nil,  1815,   nil,  1815,   nil,   163,  1792,  1774,   nil,   511,
  1813,  1814,   nil,   nil,   nil,   nil,   204,  2083,   nil,   nil,
   nil,    11,   nil,  1858,  1855,   nil,  1860,   nil,  1938,  1833,
  1859,  1865,   nil,  1835,   nil,  1005,  1868,   nil ]

racc_action_default = [
  -199,  -416,    -1,  -416,  -416,  -123,   -87,  -200,  -215,  -416,
   -88,   -89,  -202,  -416,   -90,  -203,   -91,  -204,   -69,   -92,
  -205,  -131,   -72,   -93,  -206,  -132,   -73,   -70,  -416,   -94,
  -207,  -133,   -75,   -71,   -95,  -208,  -134,   -76,   -74,  -211,
  -135,  -106,   -77,   -96,  -416,  -212,  -136,  -416,   -78,   -97,
  -416,  -141,   -79,   -98,  -213,  -403,  -416,  -416,   -99,  -214,
  -142,   -81,  -100,  -416,  -416,   -82,  -101,  -416,  -231,   -83,
  -102,  -416,   -84,  -103,  -416,  -416,  -197,  -104,  -416,   -85,
  -416,  -198,  -109,   -86,   858,  -416,  -257,   -72,   -73,  -124,
  -130,  -416,  -210,  -209,  -408,  -416,  -105,  -416,  -416,  -416,
  -416,  -416,  -323,  -247,  -416,  -416,  -244,  -416,  -416,  -346,
  -145,  -416,  -151,   -65,  -416,  -416,   -67,  -144,  -416,  -251,
  -381,  -220,  -416,  -416,  -416,  -416,  -222,  -216,  -416,  -223,
  -389,  -224,  -390,  -225,  -416,  -416,  -416,  -416,  -416,  -416,
  -393,  -416,  -114,  -111,  -416,  -416,  -416,  -139,  -416,  -137,
  -416,  -333,  -416,  -416,  -416,  -416,  -416,  -416,  -324,  -248,
  -416,  -239,  -416,  -416,  -241,  -416,  -416,   -62,  -416,  -152,
  -153,  -416,  -143,  -416,  -416,  -416,  -416,  -416,  -416,  -404,
  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,
  -416,  -394,  -107,  -416,  -416,  -265,  -266,  -416,  -416,  -416,
  -416,  -309,  -416,  -258,  -310,  -416,  -260,  -262,  -284,  -263,
  -285,  -264,  -416,  -416,  -128,  -416,  -405,  -406,  -407,  -416,
  -416,  -416,  -416,  -416,  -416,  -416,   -80,  -322,  -320,  -249,
  -416,  -416,  -237,  -416,  -416,  -245,  -416,  -416,  -416,  -347,
  -349,  -376,  -351,  -416,  -352,  -416,  -353,  -360,  -354,  -416,
   -66,  -154,  -146,   -61,   -26,   -12,  -191,   -34,   -27,   -37,
    -3,   -40,   -14,    -4,   -45,    -5,    -2,   -48,   -10,    -6,
   -50,  -416,    -7,   -52,   -22,   -18,    -8,  -416,   -54,   -28,
   -23,    -9,   -56,   -24,  -416,  -416,  -416,   -68,   -58,   -30,
   -25,  -416,  -148,  -416,  -416,  -155,  -157,  -416,  -161,   -63,
  -416,  -150,  -416,  -416,  -252,  -416,  -416,  -384,  -416,  -201,
  -416,  -217,  -416,  -386,  -416,  -402,  -416,  -416,  -416,  -416,
  -382,  -416,  -416,  -227,  -416,  -416,  -416,  -416,  -416,  -416,
  -112,  -416,  -267,  -269,  -271,  -272,  -416,  -273,  -416,  -416,
  -416,  -247,  -416,  -259,  -286,  -416,  -311,  -129,  -140,  -138,
  -416,  -416,  -416,  -416,  -232,  -234,  -235,  -325,   -60,  -416,
  -416,  -242,  -416,  -246,  -416,  -416,  -357,  -358,  -359,  -416,
  -355,  -416,  -348,  -416,  -416,  -367,  -416,  -416,  -416,  -416,
  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,
   -13,  -416,   -20,  -416,  -416,  -416,  -416,  -416,  -416,  -416,
  -416,   -19,  -416,  -177,  -416,  -416,  -195,  -416,  -416,  -147,
  -149,  -171,  -416,  -166,  -416,  -167,  -168,  -416,  -416,  -164,
  -416,  -176,  -416,  -162,  -160,   -64,  -416,  -416,  -253,  -416,
  -416,  -221,  -416,  -416,  -388,  -416,  -416,  -392,  -416,  -416,
  -218,  -416,  -416,  -219,  -416,  -416,  -395,  -397,  -396,  -416,
  -119,  -416,  -416,  -416,  -117,  -416,  -125,  -127,  -110,  -113,
  -416,  -292,  -416,  -290,  -416,  -416,  -416,  -416,  -303,  -416,
  -301,  -416,  -416,  -256,  -287,  -416,  -416,  -416,  -416,  -416,
  -416,  -416,  -240,  -416,  -243,  -362,  -416,  -416,  -416,  -345,
  -377,  -416,  -416,  -368,  -416,   -32,   -33,   -31,   -35,   -36,
   -38,   -39,   -41,   -42,   -43,   -44,   -47,   -46,   -49,  -416,
   -51,  -416,   -16,   -17,  -416,   -53,   -55,  -416,  -416,  -178,
  -180,  -416,  -179,   -11,  -192,  -416,   -57,  -416,  -416,  -416,
  -416,  -163,  -416,  -416,  -416,  -156,  -158,  -159,  -416,  -250,
  -254,  -416,  -334,  -416,  -416,  -416,  -416,  -394,  -228,  -416,
  -416,  -380,  -416,  -399,  -416,  -108,  -416,  -416,  -416,  -416,
  -416,  -115,  -416,  -416,  -294,  -416,  -416,  -416,  -291,  -261,
  -268,  -416,  -274,  -416,  -275,  -416,  -416,  -416,  -302,  -416,
  -416,  -416,  -280,  -416,  -416,  -315,  -312,  -416,  -416,  -416,
  -416,  -233,  -416,  -416,  -339,  -326,  -327,  -329,  -416,  -238,
  -416,  -363,  -350,  -416,  -416,  -366,  -364,  -416,   -21,   -15,
  -194,   -29,  -416,  -183,  -416,  -416,  -416,  -403,  -416,  -187,
  -181,  -193,  -196,  -416,  -416,  -416,  -416,  -165,  -416,  -416,
  -416,  -383,  -385,  -416,  -391,  -226,  -416,  -416,  -416,  -416,
  -400,  -416,  -416,  -416,  -416,  -118,  -416,  -126,  -416,  -416,
  -416,  -289,  -416,  -270,  -416,  -416,  -416,  -300,  -306,  -416,
  -288,  -416,  -416,  -416,  -308,  -416,  -416,  -416,  -416,  -321,
  -416,  -416,  -331,  -416,  -416,  -416,  -361,  -356,  -378,  -416,
  -369,  -416,  -184,  -416,  -185,  -416,  -189,  -188,  -182,   -59,
  -172,  -416,  -173,  -175,  -169,  -170,  -416,  -416,  -416,  -416,
  -416,  -398,  -416,  -120,  -121,  -416,  -122,  -293,  -416,  -416,
  -276,  -277,  -416,  -416,  -304,  -416,  -281,  -416,  -416,  -416,
  -416,  -416,  -236,  -416,  -416,  -416,  -344,  -416,  -416,  -416,
  -416,  -416,  -374,  -416,  -416,  -186,  -190,  -416,  -255,  -387,
  -379,  -416,  -416,  -401,  -116,  -299,  -416,  -298,  -295,  -416,
  -416,  -305,  -307,  -282,  -416,  -416,  -416,  -416,  -328,  -416,
  -330,  -416,  -416,  -416,  -416,  -416,  -337,  -416,  -371,  -370,
  -339,  -416,  -416,  -174,  -416,  -229,  -296,  -416,  -279,  -278,
  -283,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,  -416,
  -416,  -365,  -416,  -375,  -416,  -297,  -416,  -416,  -416,  -416,
  -416,  -416,  -335,  -416,  -416,  -416,  -340,  -338,  -416,  -416,
  -416,  -318,  -316,  -416,  -313,  -416,  -416,  -416,  -332,  -416,
  -336,  -416,  -373,  -416,  -230,  -416,  -416,  -416,  -415,  -416,
  -416,  -416,  -319,  -317,  -314,  -411,  -416,  -416,  -342,  -341,
  -372,  -416,  -413,  -416,  -416,  -409,  -416,  -410,  -416,  -416,
  -416,  -416,  -343,  -416,  -414,  -416,  -416,  -412 ]

racc_goto_table = [
    78,   102,   152,   287,   321,   291,   359,   324,   494,   308,
   169,   116,   293,   299,   325,   455,   358,   448,   170,   541,
   332,   543,   461,   247,   447,   546,   163,   595,   141,   491,
   468,   419,   401,   548,   454,   329,    89,   156,    26,   470,
   304,    22,   164,    76,   348,   463,   459,   519,   402,   672,
   728,   171,   127,   113,   747,   461,   679,   239,   203,   180,
   574,   571,   148,   506,   507,   553,   500,   501,   590,   498,
   499,   358,   187,   300,   107,   251,   309,    81,   485,   405,
   620,   417,   574,   603,   306,   502,   503,   504,   505,   312,
   536,   105,   317,   162,   124,   247,   234,   118,   303,   172,
    85,   200,   349,   569,   336,   116,   647,   452,   144,   710,
   345,   475,   662,   343,   462,   326,   406,   212,   563,   746,
   143,   469,    96,   795,   576,   495,   496,   497,   476,   372,
   586,   587,   813,   100,   157,   299,   481,   340,   425,   357,
   344,   423,   596,   197,   670,   758,   111,   250,   598,   526,
   108,   238,   516,   461,   602,   311,   509,   350,   365,   352,
   468,   800,   370,    78,   237,   618,   459,   428,   449,   578,
   361,   511,   640,   486,   302,   374,   568,   461,   310,   358,
   760,   358,   492,   375,   527,   771,   772,   733,   680,   768,
   515,   327,   510,   508,   358,   300,   392,     1,   197,   320,
   601,    26,   314,   305,    22,   552,   235,     2,   150,   217,
   218,   841,   847,   836,   nil,   514,    26,   nil,   nil,    22,
   328,   nil,   697,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    78,   nil,   nil,   424,   237,   nil,   nil,   nil,
   nil,   nil,   429,   nil,   nil,   nil,   711,   542,   nil,   542,
   nil,   nil,   nil,   542,   nil,   nil,   nil,   nil,   360,   nil,
   299,   nil,   nil,   681,   nil,   611,   645,   438,   nil,   627,
    26,   464,   549,    22,   nil,   363,   nil,   nil,   nil,   769,
   nil,   483,   nil,   nil,   nil,   nil,   nil,   nil,   570,   478,
   nil,   nil,   nil,   nil,   nil,   nil,   542,   164,   nil,   nil,
   487,   302,   nil,   nil,   624,   625,   626,   nil,   588,   522,
   nil,   nil,   403,   nil,   358,   358,   358,   nil,   nil,   nil,
   300,   nil,   nil,   445,   327,   nil,   nil,   327,   448,   460,
   305,   705,   642,   643,   nil,   447,   646,   467,   701,   707,
   544,   nil,   358,   358,   247,   nil,   358,   714,   nil,   612,
   nil,   nil,   531,   328,   nil,   622,   328,   nil,   616,   299,
   537,   538,   460,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   636,   nil,   nil,   nil,   801,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   558,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   689,
   580,   nil,   660,   nil,   nil,   nil,   nil,   nil,   nil,   300,
   403,   nil,   nil,   nil,   808,   nil,   709,   522,   nil,   nil,
   nil,   713,   nil,   nil,   nil,   nil,   358,   nil,   nil,   nil,
   nil,   358,   nil,   nil,   nil,   683,   nil,   327,   612,   nil,
   542,   nil,   685,   299,   nil,   831,   702,   nil,   nil,   nil,
   460,   nil,   nil,   nil,   nil,   nil,   nil,   467,   nil,   nil,
   nil,   628,   629,   nil,   nil,   nil,   328,   nil,   nil,   593,
   nil,   nil,   nil,   nil,   460,   nil,   nil,   639,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   719,   720,   648,   nil,
   nil,   nil,   nil,   nil,   726,   731,   nil,   nil,   nil,   nil,
   nil,   656,   nil,   300,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   663,   737,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   786,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   358,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   804,   630,   nil,   696,   nil,   nil,
   nil,   nil,   775,   nil,   358,   nil,   nil,   nil,   nil,   778,
   779,   821,   nil,   nil,   nil,   644,   781,   782,   nil,   nil,
   nil,   358,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   542,   nil,   nil,   723,   nil,   nil,   nil,   nil,
   nil,   nil,   729,   844,   nil,   726,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   358,   nil,   nil,   nil,   nil,   nil,   815,
   nil,   nil,   761,   nil,   445,   nil,   nil,   nil,   nil,   nil,
   824,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   757,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   851,
   nil,   nil,   nil,   nil,   nil,   nil,   856,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   803,   nil,   nil,   nil,   nil,
   nil,   593 ]

racc_goto_check = [
    45,     4,    81,    32,    80,    23,     6,     5,   149,    23,
    29,    31,    55,    28,   153,    44,    22,    75,    53,    82,
   101,    82,    24,    96,    73,    82,    84,   125,   152,   150,
    24,    60,    10,    83,    48,    40,    25,     4,    34,   114,
    90,    33,    31,    64,    23,   109,    43,    61,    11,   129,
   131,    31,    79,    30,   112,    24,   148,   134,    93,    47,
    83,   102,    51,    15,    15,   158,    13,    13,    82,    12,
    12,    22,    47,    29,    86,    53,    66,    65,   109,    63,
    62,    59,    83,   102,    81,    14,    14,    14,    14,    81,
    57,    25,    81,    85,    67,    96,    87,    88,    89,    54,
    91,    92,    52,    94,    95,    31,    49,    46,    42,   103,
   105,   106,   107,    93,   108,    41,    32,    51,   110,   111,
    39,   113,    37,   112,   115,    10,    10,    10,   117,   134,
   118,   119,   120,   121,   122,    28,   123,     4,    28,   124,
     4,    27,   126,    45,   127,   128,    26,    30,   130,    20,
   132,   133,    19,    24,   135,    79,    11,     4,   136,     4,
    24,   131,   141,    45,    45,    61,    43,    90,    40,   114,
    31,     6,   158,   142,    45,   143,   109,    24,    45,    22,
   129,    22,   144,     4,     6,   148,   148,   145,   146,   147,
    18,    45,    17,    16,    22,    29,     8,     1,    45,   154,
   109,    34,   155,    25,    33,   157,    64,     2,   159,   160,
   161,   162,   163,   164,   nil,     5,    34,   nil,   nil,    33,
    25,   nil,    82,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    45,   nil,   nil,    31,    45,   nil,   nil,   nil,
   nil,   nil,    31,   nil,   nil,   nil,    83,     5,   nil,     5,
   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,    25,   nil,
    28,   nil,   nil,   150,   nil,    10,    48,   152,   nil,    60,
    34,    47,    23,    33,   nil,    64,   nil,   nil,   nil,   125,
   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   101,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     5,    31,   nil,   nil,
    47,    45,   nil,   nil,     6,     6,     6,   nil,    23,    53,
   nil,   nil,    25,   nil,    22,    22,    22,   nil,   nil,   nil,
    29,   nil,   nil,    45,    45,   nil,   nil,    45,    75,    45,
    25,    44,     6,     6,   nil,    73,     6,    45,    73,    24,
    81,   nil,    22,    22,    96,   nil,    22,    24,   nil,    23,
   nil,   nil,    47,    25,   nil,    32,    25,   nil,    55,    28,
    31,    47,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   153,   nil,   nil,   nil,    82,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
     4,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    25,   nil,   nil,   nil,   149,   nil,     6,    53,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,    23,   nil,    45,    23,   nil,
     5,   nil,    55,    28,   nil,   149,    80,   nil,   nil,   nil,
    45,   nil,   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,
   nil,     4,     4,   nil,   nil,   nil,    25,   nil,   nil,    45,
   nil,   nil,   nil,   nil,    45,   nil,   nil,    47,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    23,    23,    47,   nil,
   nil,   nil,   nil,   nil,    23,    32,   nil,   nil,   nil,   nil,
   nil,    47,   nil,    29,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,    25,   nil,    31,   nil,   nil,
   nil,   nil,    32,   nil,    22,   nil,   nil,   nil,   nil,    32,
    32,     6,   nil,   nil,   nil,    25,    23,    23,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     5,   nil,   nil,    47,   nil,   nil,   nil,   nil,
   nil,   nil,     4,     6,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,    81,   nil,    45,   nil,   nil,   nil,   nil,   nil,
    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,    45 ]

racc_goto_pointer = [
   nil,   197,   207,   nil,   -62,  -183,  -224,   nil,   -75,   nil,
  -252,  -237,  -311,  -316,  -299,  -325,  -198,  -202,  -209,  -248,
  -258,   nil,  -214,  -169,  -309,    27,    72,  -156,  -162,  -102,
   -21,   -63,  -170,    39,    36,   nil,   nil,    75,   nil,    38,
  -158,   -77,    26,  -283,  -313,    -2,  -220,   -65,  -293,  -456,
   nil,   -29,  -113,   -94,   -16,  -163,   nil,  -332,   nil,  -213,
  -263,  -356,  -442,  -207,    41,    75,  -104,    16,   nil,   nil,
   nil,   nil,   nil,  -301,   nil,  -308,   nil,   nil,   nil,   -26,
  -185,   -93,  -411,  -406,   -79,   -11,     7,   -69,    22,   -78,
  -136,    96,   -44,   -87,  -361,   -93,  -143,   nil,   nil,   nil,
   nil,  -177,  -405,  -543,   nil,   -92,  -234,  -469,  -217,  -286,
  -342,  -589,  -654,  -218,  -300,  -343,   nil,  -218,  -346,  -345,
  -664,    70,    34,  -221,   -89,  -454,  -339,  -449,  -578,  -544,
  -333,  -623,    79,   -15,  -109,  -333,   -79,   nil,   nil,   nil,
   nil,   -75,  -191,   -70,  -192,  -493,  -418,  -544,  -548,  -368,
  -344,   nil,   -52,  -177,    11,    19,   nil,  -240,  -380,   114,
    59,    60,  -624,  -629,  -615 ]

racc_goto_default = [
   nil,   nil,   nil,   262,   266,   268,   404,   275,   279,   284,
   289,   nil,   257,   259,   261,   264,   267,   270,   273,   278,
   282,   288,   253,   256,    68,    74,   nil,   298,     5,     9,
   nil,   457,   nil,    87,    88,    32,    37,    41,    47,   nil,
   nil,   nil,   nil,   330,   nil,   294,   nil,   nil,   nil,   456,
    13,   nil,   149,   115,   117,   nil,   295,   296,   297,   nil,
   nil,   nil,   520,   nil,   nil,   nil,     7,   nil,    12,    15,
    17,    20,    24,    30,    35,    39,    45,    54,    59,   nil,
   nil,   nil,   nil,   323,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   206,   nil,   207,   209,   211,   195,
   196,   nil,   nil,   572,   202,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   597,   nil,
   759,   nil,   nil,   nil,   nil,   240,   nil,   242,   244,   246,
   248,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   243,
   nil,   137,   nil,   nil,   120,   nil,   446,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :TRUE => 2,
 :FALSE => 3,
 :INTEGER_CONSTANT => 4,
 :FLOATING_CONSTANT => 5,
 :OCTAL_CONSTANT => 6,
 :HEX_CONSTANT => 7,
 :CHARACTER_LITERAL => 8,
 "(" => 9,
 ")" => 10,
 :STRING_LITERAL => 11,
 "[" => 12,
 "]" => 13,
 "." => 14,
 :IDENTIFIER => 15,
 "->" => 16,
 :SIZEOF => 17,
 "&" => 18,
 "*" => 19,
 "+" => 20,
 "-" => 21,
 "~" => 22,
 "!" => 23,
 "/" => 24,
 "%" => 25,
 "<<" => 26,
 ">>" => 27,
 "<" => 28,
 ">" => 29,
 "<=" => 30,
 ">=" => 31,
 "==" => 32,
 "!=" => 33,
 "^" => 34,
 "|" => 35,
 "&&" => 36,
 "||" => 37,
 "?" => 38,
 ":" => 39,
 ";" => 40,
 "," => 41,
 "=" => 42,
 :VOID => 43,
 :FLOAT32_T => 44,
 :DOUBLE64_T => 45,
 :TYPE_NAME => 46,
 :BOOL_T => 47,
 :FLOAT => 48,
 :DOUBLE => 49,
 :DESCRIPTOR => 50,
 :CHAR_T => 51,
 :SCHAR_T => 52,
 :UCHAR_T => 53,
 :CHAR => 54,
 :SHORT => 55,
 :INT => 56,
 :LONG => 57,
 :INT8 => 58,
 :INT16 => 59,
 :INT32 => 60,
 :INT64 => 61,
 :INT128 => 62,
 :INT8_T => 63,
 :INT16_T => 64,
 :INT32_T => 65,
 :INT64_T => 66,
 :INT128_T => 67,
 :UINT8_T => 68,
 :UINT16_T => 69,
 :UINT32_T => 70,
 :UINT64_T => 71,
 :UINT128_T => 72,
 :SIGNED => 73,
 :UNSIGNED => 74,
 :STRUCT => 75,
 "{" => 76,
 "}" => 77,
 :STRING => 78,
 :SIZE_IS => 79,
 :COUNT_IS => 80,
 :ENUM => 81,
 :ENUM8 => 82,
 :ENUM16 => 83,
 :ENUM32 => 84,
 :ENUM64 => 85,
 :ENUM128 => 86,
 :CONST => 87,
 :VOLATILE => 88,
 "..." => 89,
 :IN => 90,
 :OUT => 91,
 :INOUT => 92,
 :SEND => 93,
 :RECEIVE => 94,
 :NULLABLE => 95,
 :C_EXP => 96,
 :ALLOCATOR => 97,
 :CONTEXT => 98,
 :DEVIATE => 99,
 :ID => 100,
 :PROTOTYPE => 101,
 :SINGLETON => 102,
 :IDX_IS_ID => 103,
 :ACTIVE => 104,
 :GENERATE => 105,
 :IMPORT_C => 106,
 :IMPORT => 107,
 :AB_STRING_LITERAL => 108,
 :TYPEDEF => 109,
 :NAMESPACE => 110,
 "::" => 111,
 :SIGNATURE => 112,
 :ONEWAY => 113,
 :CELLTYPE => 114,
 :INLINE => 115,
 :OPTIONAL => 116,
 :REF_DESC => 117,
 :DYNAMIC => 118,
 :CALL => 119,
 :ENTRY => 120,
 :ATTRIBUTE => 121,
 :OMIT => 122,
 :CHOICE => 123,
 :VAR => 124,
 :REQUIRE => 125,
 :FACTORY => 126,
 :CTFACTORY => 127,
 :CELL => 128,
 :THROUGH => 129,
 :COMPOSITE => 130,
 "=>" => 131,
 :REGION => 132,
 :IN_THROUGH => 133,
 :OUT_THROUGH => 134,
 :TO_THROUGH => 135,
 :NODE => 136,
 :LINKUNIT => 137,
 :DOMAIN => 138,
 :CLASS => 139,
 :__LOCATION_INFORMATION__ => 140,
 :__CELL__ => 141,
 :__JOIN__ => 142 }

racc_use_result_var = true

racc_nt_base = 143

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'TRUE',
'FALSE',
'INTEGER_CONSTANT',
'FLOATING_CONSTANT',
'OCTAL_CONSTANT',
'HEX_CONSTANT',
'CHARACTER_LITERAL',
'"("',
'")"',
'STRING_LITERAL',
'"["',
'"]"',
'"."',
'IDENTIFIER',
'"->"',
'SIZEOF',
'"&"',
'"*"',
'"+"',
'"-"',
'"~"',
'"!"',
'"/"',
'"%"',
'"<<"',
'">>"',
'"<"',
'">"',
'"<="',
'">="',
'"=="',
'"!="',
'"^"',
'"|"',
'"&&"',
'"||"',
'"?"',
'":"',
'";"',
'","',
'"="',
'VOID',
'FLOAT32_T',
'DOUBLE64_T',
'TYPE_NAME',
'BOOL_T',
'FLOAT',
'DOUBLE',
'DESCRIPTOR',
'CHAR_T',
'SCHAR_T',
'UCHAR_T',
'CHAR',
'SHORT',
'INT',
'LONG',
'INT8',
'INT16',
'INT32',
'INT64',
'INT128',
'INT8_T',
'INT16_T',
'INT32_T',
'INT64_T',
'INT128_T',
'UINT8_T',
'UINT16_T',
'UINT32_T',
'UINT64_T',
'UINT128_T',
'SIGNED',
'UNSIGNED',
'STRUCT',
'"{"',
'"}"',
'STRING',
'SIZE_IS',
'COUNT_IS',
'ENUM',
'ENUM8',
'ENUM16',
'ENUM32',
'ENUM64',
'ENUM128',
'CONST',
'VOLATILE',
'"..."',
'IN',
'OUT',
'INOUT',
'SEND',
'RECEIVE',
'NULLABLE',
'C_EXP',
'ALLOCATOR',
'CONTEXT',
'DEVIATE',
'ID',
'PROTOTYPE',
'SINGLETON',
'IDX_IS_ID',
'ACTIVE',
'GENERATE',
'IMPORT_C',
'IMPORT',
'AB_STRING_LITERAL',
'TYPEDEF',
'NAMESPACE',
'"::"',
'SIGNATURE',
'ONEWAY',
'CELLTYPE',
'INLINE',
'OPTIONAL',
'REF_DESC',
'DYNAMIC',
'CALL',
'ENTRY',
'ATTRIBUTE',
'OMIT',
'CHOICE',
'VAR',
'REQUIRE',
'FACTORY',
'CTFACTORY',
'CELL',
'THROUGH',
'COMPOSITE',
'"=>"',
'REGION',
'IN_THROUGH',
'OUT_THROUGH',
'TO_THROUGH',
'NODE',
'LINKUNIT',
'DOMAIN',
'CLASS',
'__LOCATION_INFORMATION__',
'__CELL__',
'__JOIN__',
'$start',
'all',
'component_description',
'primary_expression',
'namespace_identifier',
'string_literal_list',
'expression',
'postfix_expression',
'unary_expression',
'unary_operator',
'cast_expression',
'type_name',
'multiplicative_expression',
'additive_expression',
'shift_expression',
'relational_expression',
'equality_expression',
'and_expression',
'exclusive_or_expression',
'inclusive_or_expression',
'logical_and_expression',
'logical_or_expression',
'conditional_expression',
'constant_expression',
'declaration',
'type_specifier_qualifier_list',
'init_declarator_list',
'declaration_specifiers',
'type_specifier',
'type_qualifier',
'init_declarator',
'declarator',
'initializer',
'struct_specifier',
'enum_specifier',
'sign_int_type',
'char_type',
'int_type',
'sign',
'struct_tag',
'struct_declaration_list',
'@1',
'@2',
'struct_declaration',
'struct_declarator_list',
'spec_L',
'pointer_specifier_list',
'spec_R',
'pointer_specifier',
'struct_declarator',
'enum_type',
'enumerator_list',
'enumerator',
'pointer',
'direct_declarator',
'parameter_type_list',
'parameter_list',
'parameter_declaration',
'parameter_specifier_list_bracket',
'parameter_specifier_list',
'parameter_specifier',
'abstract_declarator',
'direct_abstract_declarator',
'initializer_list',
'specified_statement',
'location_information',
'statement',
'statement_specifier_list',
'typedef',
'const_statement',
'namespace',
'signature',
'celltype',
'cell',
'composite_celltype',
'region',
'import',
'import_C',
'signature_plugin',
'statement_specifier',
'alloc_list',
'plugin_name',
'plugin_arg',
'alloc',
'declarator_list',
'typedef_specifier',
'namespace_name',
'statement_list',
'signature_name',
'function_head_list',
'function_head',
'celltype_name',
'celltype_statement_list',
'specified_celltype_statement',
'celltype_statement',
'celltype_statement_specifier_list',
'port',
'attribute',
'var',
'require',
'factory',
'celltype_statement_specifier',
'alloc_list2',
'alloc2',
'port_type',
'namespace_signature_name',
'port_name',
'array_size',
'attribute_declaration_list',
'attribute_declaration',
'attribute_specifier',
'choice_list',
'choice_element',
'var_declaration_list',
'var_declaration',
'var_specifier',
'factory_head',
'factory_function_list',
'factory_function',
'factory_function_name',
'arg_list',
'namespace_celltype_name',
'cell_name',
'join_list',
'@3',
'specified_join',
'reverse_join',
'join_specifier_list',
'join',
'join_specifier',
'cae_name',
'array_index',
'composite_celltype_name',
'composite_celltype_statement_list',
'specified_composite_celltype_statement',
'composite_celltype_statement',
'composite_celltype_statement_specifier_list',
'composite_port',
'composite_attribute',
'internal_cell',
'export_join',
'composite_celltype_statement_specifier',
'composite_attribute_declaration_list',
'internal_namespace_celltype_name',
'internal_cell_name',
'internal_join_list',
'@4',
'external_join',
'internal_cell_elem_name',
'export_name',
'internal_ref_cell_name',
'region_specifier_list',
'region_name',
'region_statement',
'region_specifier',
'namespace_region_name',
'region_cell',
'region_cell_specifier_list',
'region_cell_specifier',
'cell_location_join_location_list',
'cell_location',
'join_location',
'port_location_list',
'port_location',
'bar_list']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 52
  def _reduce_2( val, _values, result )
 result = [ :IDENTIFIER, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 54
  def _reduce_3( val, _values, result )
 result = [ :BOOL_CONSTANT, true ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 56
  def _reduce_4( val, _values, result )
 result = [ :BOOL_CONSTANT, false ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 58
  def _reduce_5( val, _values, result )
 result = [ :INTEGER_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 60
  def _reduce_6( val, _values, result )
 result = [ :FLOATING_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 62
  def _reduce_7( val, _values, result )
 result = [ :OCTAL_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 64
  def _reduce_8( val, _values, result )
 result = [ :HEX_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 66
  def _reduce_9( val, _values, result )
 result = [ :CHARACTER_LITERAL, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 68
  def _reduce_10( val, _values, result )
 result = [ :STRING_LITERAL_LIST, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 70
  def _reduce_11( val, _values, result )
 result = [ :PARENTHESES, val[1].get_elements ]
   result
  end
.,.,

 # reduce 12 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 80
  def _reduce_13( val, _values, result )
			# 連接した文字列を1つの文字列にまとめる
			str = "\"" + val[0].val.gsub( /\"(.*)\"/, "\\1" ) + val[1].val.gsub( /\"(.*)\"/, "\\1" ) + "\""
			result = Token.new( str, val[0].file, val[0].lineno, val[0].col )
   result
  end
.,.,

 # reduce 14 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 85
  def _reduce_15( val, _values, result )
 result = [ :OP_SUBSC, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 87
  def _reduce_16( val, _values, result )
 result = [ :OP_DOT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 89
  def _reduce_17( val, _values, result )
 result = [ :OP_REF, val[0], val[2] ]
   result
  end
.,.,

 # reduce 18 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 95
  def _reduce_19( val, _values, result )
 result = [ val[0], val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 97
  def _reduce_20( val, _values, result )
 result = [ :OP_SIZEOF_EXPR, val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 99
  def _reduce_21( val, _values, result )
 result = [ :OP_SIZEOF_TYPE, val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 102
  def _reduce_22( val, _values, result )
 result = :OP_U_AMP
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 103
  def _reduce_23( val, _values, result )
 result = :OP_U_ASTER
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 104
  def _reduce_24( val, _values, result )
 result = :OP_U_PLUS
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 105
  def _reduce_25( val, _values, result )
 result = :OP_U_MINUS
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 106
  def _reduce_26( val, _values, result )
 result = :OP_U_TILDE
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 107
  def _reduce_27( val, _values, result )
 result = :OP_U_EXCLAM
   result
  end
.,.,

 # reduce 28 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 112
  def _reduce_29( val, _values, result )
  result = [ :CAST, val[1], val[3] ]
   result
  end
.,.,

 # reduce 30 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 117
  def _reduce_31( val, _values, result )
 result = [ :OP_MULT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 119
  def _reduce_32( val, _values, result )
 result = [ :OP_DIV, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 121
  def _reduce_33( val, _values, result )
 result = [ :OP_REMAIN, val[0], val[2] ]
   result
  end
.,.,

 # reduce 34 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 126
  def _reduce_35( val, _values, result )
 result = [ :OP_ADD, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 128
  def _reduce_36( val, _values, result )
 result = [ :OP_SUB, val[0], val[2] ]
   result
  end
.,.,

 # reduce 37 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 133
  def _reduce_38( val, _values, result )
 result = [ :OP_LSFT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 135
  def _reduce_39( val, _values, result )
 result = [ :OP_RSFT, val[0], val[2] ]
   result
  end
.,.,

 # reduce 40 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 140
  def _reduce_41( val, _values, result )
 result = [ :OP_LT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 142
  def _reduce_42( val, _values, result )
 result = [ :OP_GT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 144
  def _reduce_43( val, _values, result )
 result = [ :OP_LE, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 146
  def _reduce_44( val, _values, result )
 result = [ :OP_GE, val[0], val[2] ]
   result
  end
.,.,

 # reduce 45 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 151
  def _reduce_46( val, _values, result )
 result = [ :OP_EQ, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 153
  def _reduce_47( val, _values, result )
 result = [ :OP_NE, val[0], val[2] ]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 158
  def _reduce_49( val, _values, result )
 result = [ :OP_AND, val[0], val[2] ]
   result
  end
.,.,

 # reduce 50 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 163
  def _reduce_51( val, _values, result )
 result = [ :OP_EOR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 52 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 168
  def _reduce_53( val, _values, result )
 result = [ :OP_OR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 54 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 173
  def _reduce_55( val, _values, result )
 result = [ :OP_LAND, val[0], val[2] ]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 178
  def _reduce_57( val, _values, result )
 result = [ :OP_LOR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 183
  def _reduce_59( val, _values, result )
 result = [ :OP_CEX, val[0], val[2].get_elements, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 193
  def _reduce_60( val, _values, result )
			result = Expression.new( val[0] )
			# result.print
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 207
  def _reduce_61( val, _values, result )
			result = Expression.new( val[0] )
			# result.print

			# res = result.eval_const( nil )
			# if res then
			#   puts "val: #{res}"
			# else
			#   puts "val: nil"
			# end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 224
  def _reduce_62( val, _values, result )
			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
			}
			result = val[1]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 238
  def _reduce_64( val, _values, result )
			val[1].set_qualifier( val[0] )
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 241
  def _reduce_65( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 243
  def _reduce_66( val, _values, result )
 result << val[2]
   result
  end
.,.,

 # reduce 67 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 248
  def _reduce_68( val, _values, result )
 val[0].set_initializer( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 254
  def _reduce_69( val, _values, result )
 result = VoidType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 255
  def _reduce_70( val, _values, result )
 result = FloatType.new(32)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 256
  def _reduce_71( val, _values, result )
 result = FloatType.new(64)
   result
  end
.,.,

 # reduce 72 omitted

 # reduce 73 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 259
  def _reduce_74( val, _values, result )
 result = DefinedType.new( val[0].val )
   result
  end
.,.,

 # reduce 75 omitted

 # reduce 76 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 263
  def _reduce_77( val, _values, result )
 result = BoolType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 272
  def _reduce_78( val, _values, result )
			Generator.warning( "W5002 float: obsolete type. use float32_t"  )
			result = FloatType.new(32)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 276
  def _reduce_79( val, _values, result )
			Generator.warning( "W5003 double: obsolete type. use double64_t"  )
			result = FloatType.new(64)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 278
  def _reduce_80( val, _values, result )
          # namespace_identifier: signature name
			result = DescriptorType.new( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 281
  def _reduce_81( val, _values, result )
 result = IntType.new( -1 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 287
  def _reduce_82( val, _values, result )
			result = IntType.new( -1 )
			result.set_sign( :SIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 292
  def _reduce_83( val, _values, result )
			result = IntType.new( -1 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 298
  def _reduce_84( val, _values, result )
			# Generator.warning( "W5004 char: obsolete type. use char_t"  )
			result = IntType.new( -11 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 298
  def _reduce_85( val, _values, result )
 result = IntType.new( -2 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 299
  def _reduce_86( val, _values, result )
 result = IntType.new( -3 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 300
  def _reduce_87( val, _values, result )
 result = IntType.new( -4 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 306
  def _reduce_88( val, _values, result )
			Generator.warning( "W5005 int8: obsolete. use int8_t"  )
			result = IntType.new(  8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 310
  def _reduce_89( val, _values, result )
			Generator.warning( "W5006 int16: obsolete. use int16_t"  )
			result = IntType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 314
  def _reduce_90( val, _values, result )
			Generator.warning( "W5007 int32: obsolete. use int32_t"  )
			result = IntType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 319
  def _reduce_91( val, _values, result )
			Generator.warning( "W5008 int64: obsolete. use int64_t"  )
			result = IntType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 324
  def _reduce_92( val, _values, result )
			Generator.warning( "W5009 int64: obsolete. use int64_t"  )
			result = IntType.new( 128 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 324
  def _reduce_93( val, _values, result )
 result = IntType.new( 8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 325
  def _reduce_94( val, _values, result )
 result = IntType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 326
  def _reduce_95( val, _values, result )
 result = IntType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 327
  def _reduce_96( val, _values, result )
 result = IntType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 328
  def _reduce_97( val, _values, result )
 result = IntType.new( 128 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 334
  def _reduce_98( val, _values, result )
			result = IntType.new( 8 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 339
  def _reduce_99( val, _values, result )
			result = IntType.new( 16 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 344
  def _reduce_100( val, _values, result )
			result = IntType.new( 32 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 349
  def _reduce_101( val, _values, result )
			result = IntType.new( 64 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 354
  def _reduce_102( val, _values, result )
			result = IntType.new( 128 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 356
  def _reduce_103( val, _values, result )
 result = :SIGNED
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 357
  def _reduce_104( val, _values, result )
 result = :UNSIGNED
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 366
  def _reduce_105( val, _values, result )
			val[1].set_sign( val[0] )
			result = val[1]
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 371
  def _reduce_107( val, _values, result )
 StructType.set_define( true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 377
  def _reduce_108( val, _values, result )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 384
  def _reduce_109( val, _values, result )
			# tag が無い場合、内部名を与える
			result = StructType.new( :"$TAG_#{@@no_struct_tag_num}" )
			@@no_struct_tag_num += 1
			StructType.set_define( true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 389
  def _reduce_110( val, _values, result )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 395
  def _reduce_111( val, _values, result )
			StructType.set_define( false )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

 # reduce 112 omitted

 # reduce 113 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 402
  def _reduce_114( val, _values, result )
 result = StructType.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 416
  def _reduce_115( val, _values, result )
			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
				i.set_kind( :MEMBER )
				i.check
				StructType.new_member( i )
			}
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 427
  def _reduce_116( val, _values, result )
			val[4].each { |i|	# i: Decl
				i.set_type( val[3] )
				i.set_kind( :MEMBER )
  				i.set_specifier_list val[1]
				i.check
				StructType.new_member( i )
			}
			result = val[4]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 429
  def _reduce_117( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 430
  def _reduce_118( val, _values, result )
 result <<  val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 433
  def _reduce_119( val, _values, result )
 result = [:STRING,-1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 434
  def _reduce_120( val, _values, result )
 result = [:STRING,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 435
  def _reduce_121( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 436
  def _reduce_122( val, _values, result )
 result = [:COUNT_IS,val[2]]
   result
  end
.,.,

 # reduce 123 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 450
  def _reduce_124( val, _values, result )
			val[1].set_qualifier( val[0] )
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 456
  def _reduce_125( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 458
  def _reduce_126( val, _values, result )
 result << val[2]
   result
  end
.,.,

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 471
  def _reduce_131( val, _values, result )
 result = EnumType.new( -1 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 472
  def _reduce_132( val, _values, result )
 result = EnumType.new( 8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 473
  def _reduce_133( val, _values, result )
 result = EnumType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 474
  def _reduce_134( val, _values, result )
 result = EnumType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 475
  def _reduce_135( val, _values, result )
 result = EnumType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 476
  def _reduce_136( val, _values, result )
 result = EnumType.new( 128 )
   result
  end
.,.,

 # reduce 137 omitted

 # reduce 138 omitted

 # reduce 139 omitted

 # reduce 140 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 487
  def _reduce_141( val, _values, result )
 result = :CONST
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 488
  def _reduce_142( val, _values, result )
 result = :VOLATILE
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 496
  def _reduce_143( val, _values, result )
			val[1].set_type( val[0] )
			result = val[1]
   result
  end
.,.,

 # reduce 144 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 500
  def _reduce_145( val, _values, result )
 result = Decl.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 502
  def _reduce_146( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 508
  def _reduce_147( val, _values, result )
			val[0].set_type( ArrayType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 513
  def _reduce_148( val, _values, result )
			val[0].set_type( ArrayType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 518
  def _reduce_149( val, _values, result )
			val[0].set_type( FuncType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 525
  def _reduce_150( val, _values, result )
			Generator.warning( "W5010 need 'void' for no parameter"  )
			val[0].set_type( FuncType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 528
  def _reduce_151( val, _values, result )
 result = PtrType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 534
  def _reduce_152( val, _values, result )
			result = PtrType.new
			result.set_qualifier( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 539
  def _reduce_153( val, _values, result )
			val[1].set_type(PtrType.new)
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 546
  def _reduce_154( val, _values, result )
			ptrtype = PtrType.new
			ptrtype.set_qualifier( val[1] )
			val[2].set_type( ptrtype )
			result = val[2]
   result
  end
.,.,

 # reduce 155 omitted

 # reduce 156 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 555
  def _reduce_157( val, _values, result )
 result = ParamList.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 561
  def _reduce_158( val, _values, result )
			val[0].add_param( val[2] )
			# result = val[0] 不要
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 573
  def _reduce_159( val, _values, result )
			val[2].set_kind( :PARAMETER )
			paramdecl = ParamDecl.new( val[2], val[1], val[0] )
			val[2].check
			result = paramdecl
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 580
  def _reduce_160( val, _values, result )
			Generator.error( "G1001 need specifier for \'$1\'" , val[1].get_name )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 587
  def _reduce_161( val, _values, result )
			unless val[0].instance_of?( VoidType ) then
				Generator.error( "G1002 need parameter name"  )
			end
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 595
  def _reduce_162( val, _values, result )
			unless val[1].instance_of?( VoidType ) then
				Generator.error( "G1003 need parameter name"  )
			end
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 597
  def _reduce_163( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 601
  def _reduce_164( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 603
  def _reduce_165( val, _values, result )
 result = result + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 606
  def _reduce_166( val, _values, result )
 result = [ [:IN]  ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 607
  def _reduce_167( val, _values, result )
 result = [ [:OUT] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 608
  def _reduce_168( val, _values, result )
 result = [ [:INOUT] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 609
  def _reduce_169( val, _values, result )
 result = [ [:SEND,   val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 610
  def _reduce_170( val, _values, result )
 result = [ [:RECEIVE,val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 611
  def _reduce_171( val, _values, result )
 result = [ [:STRING,nil] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 612
  def _reduce_172( val, _values, result )
 result = [ [:STRING,  val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 613
  def _reduce_173( val, _values, result )
 result = [ [:SIZE_IS, val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 618
  def _reduce_174( val, _values, result )
			result = [ [:SIZE_IS,val[2]], [:MAX_IS, val[4]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 618
  def _reduce_175( val, _values, result )
 result = [ [:COUNT_IS,val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 619
  def _reduce_176( val, _values, result )
 result = [ [:NULLABLE] ]
   result
  end
.,.,

 # reduce 177 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 633
  def _reduce_178( val, _values, result )
			if val[1] then
				val[1].set_type( val[0] )
				result = val[1]
			else
				# エラー：仮で val[0] を返す
				result = val[0]
			end
   result
  end
.,.,

 # reduce 179 omitted

 # reduce 180 omitted

 # reduce 181 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 642
  def _reduce_182( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 648
  def _reduce_183( val, _values, result )
			Generator.error( "G1004 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 653
  def _reduce_184( val, _values, result )
			Generator.error( "G1005 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 658
  def _reduce_185( val, _values, result )
			Generator.error( "G1006 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 663
  def _reduce_186( val, _values, result )
			Generator.error( "G1007 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 668
  def _reduce_187( val, _values, result )
			Generator.error( "G1008 impossible function type"  )
			result = nil
   result
  end
.,.,

 # reduce 188 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 675
  def _reduce_189( val, _values, result )
			Generator.warning( "W5011 need 'void' for no parameter"  )
			val[0].set_type( FuncType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 680
  def _reduce_190( val, _values, result )
			val[0].set_type( FuncType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 684
  def _reduce_191( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 686
  def _reduce_192( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 688
  def _reduce_193( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 691
  def _reduce_194( val, _values, result )
 result = C_EXP.new( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 698
  def _reduce_195( val, _values, result )
			result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 703
  def _reduce_196( val, _values, result )
			val[0] << val[2]
			result = val[0]
   result
  end
.,.,

 # reduce 197 omitted

 # reduce 198 omitted

 # reduce 199 omitted

 # reduce 200 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 726
  def _reduce_201( val, _values, result )
			obj = val[3]
			if obj.kind_of?( Cell ) || obj.kind_of?( Signature ) || obj.kind_of?( Celltype ) || obj.kind_of?( CompositeCelltype )then
                                # cell, signature 以外は、指定子を置けない
			else
              Generator.get_statement_specifier   # クリア
              Generator.error( "G1009 unexpected specifier"  )
			end
   result
  end
.,.,

 # reduce 202 omitted

 # reduce 203 omitted

 # reduce 204 omitted

 # reduce 205 omitted

 # reduce 206 omitted

 # reduce 207 omitted

 # reduce 208 omitted

 # reduce 209 omitted

 # reduce 210 omitted

 # reduce 211 omitted

 # reduce 212 omitted

 # reduce 213 omitted

 # reduce 214 omitted

 # reduce 215 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 747
  def _reduce_216( val, _values, result )
 Generator.add_statement_specifier val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 749
  def _reduce_217( val, _values, result )
 Generator.add_statement_specifier val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 753
  def _reduce_218( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 755
  def _reduce_219( val, _values, result )
 result = [ :CONTEXT, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 757
  def _reduce_220( val, _values, result )
 result = [ :DEVIATE ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 759
  def _reduce_221( val, _values, result )
 result = [ :ID, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 761
  def _reduce_222( val, _values, result )
 result = [ :PROTOTYPE ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 762
  def _reduce_223( val, _values, result )
 result = [:SINGLETON]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 763
  def _reduce_224( val, _values, result )
 result = [:IDX_IS_ID]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 764
  def _reduce_225( val, _values, result )
 result = [:ACTIVE]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 766
  def _reduce_226( val, _values, result )
 result = [:GENERATE, val[2].val, val[4].val]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 769
  def _reduce_227( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 770
  def _reduce_228( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 774
  def _reduce_229( val, _values, result )
  result = [ :NORMAL_ALLOC, val[0], nil, val[2], val[4], val[6] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 776
  def _reduce_230( val, _values, result )
  result = [ :NORMAL_ALLOC, val[0], val[2], val[5], val[7], val[9] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 792
  def _reduce_231( val, _values, result )
			val[0].each { |decl|
				decl.set_kind( :CONSTANT )
				Namespace.new_const_decl( decl )
				decl.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 800
  def _reduce_232( val, _values, result )
			@@import_C = true
			Import_C.new( val[2] )
			@@import_C = false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 806
  def _reduce_233( val, _values, result )
			@@import_C = true
			Import_C.new( val[2], val[4] )
			@@import_C = false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 809
  def _reduce_234( val, _values, result )
 Import.new( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 811
  def _reduce_235( val, _values, result )
 Import.new( val[2], true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 816
  def _reduce_236( val, _values, result )
 Generate.new( val[2].val, val[4], val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 829
  def _reduce_237( val, _values, result )
			val[2].each{ |i|       # i:Decl
				i.set_kind( :TYPEDEF )
    		}
			Typedef.new_decl_list( val[1], val[2] )
			val[2].each{ |i|       # i:Decl
				i.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 839
  def _reduce_238( val, _values, result )
			val[5].each{ |i|       # i:Decl
				i.set_kind( :TYPEDEF )
			}
			Typedef.new_decl_list( val[4], val[5] )
			val[5].each{ |i|       # i:Decl
				i.check
			}
   result
  end
.,.,

 # reduce 239 omitted

 # reduce 240 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 848
  def _reduce_241( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 850
  def _reduce_242( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 854
  def _reduce_243( val, _values, result )
val[1].end_of_parse
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 858
  def _reduce_244( val, _values, result )
result = Namespace.new(val[0].val)
   result
  end
.,.,

 # reduce 245 omitted

 # reduce 246 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 866
  def _reduce_247( val, _values, result )
 result = NamespacePath.new( val[0].val, false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 867
  def _reduce_248( val, _values, result )
 result = NamespacePath.new( val[1].val, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 869
  def _reduce_249( val, _values, result )
 result = val[0].append!( val[2].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 874
  def _reduce_250( val, _values, result )
 result = val[1].end_of_parse( val[3] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 878
  def _reduce_251( val, _values, result )
result = Signature.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 882
  def _reduce_252( val, _values, result )
 result = NamedList.new( val[0], "function" )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 884
  def _reduce_253( val, _values, result )
 result = val[0].add_item( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 900
  def _reduce_254( val, _values, result )
			# val[1]: Decl
			if val[1].is_function? then
				result = FuncHead.new( val[1], val[0], false )
				val[1].set_kind :FUNCHEAD
				val[1].check
			else
				# mikan 関数の配列も以下のメッセージになる
				Generator.error( "G1010 Not function"  )
				result = nil
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 909
  def _reduce_255( val, _values, result )
			if val[4].is_function? then
				result = FuncHead.new( val[4], val[3], true )
			else
				Generator.error( "G1011 Not function"  )
				result = nil
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 918
  def _reduce_256( val, _values, result )
			val[1].end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 921
  def _reduce_257( val, _values, result )
 result = Celltype.new(val[0].val)
   result
  end
.,.,

 # reduce 258 omitted

 # reduce 259 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 934
  def _reduce_260( val, _values, result )
			if val[0].kind_of? Port then
				Celltype.new_port( val[0] )
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 944
  def _reduce_261( val, _values, result )
			if val[3].kind_of? Port then
				val[3].set_specifier val[1]  # 設定順序あり
				Celltype.new_port( val[3] )
			else
				# Port 以外では指定子はエラー
				Generator.error( "G1012 $1 : cannot put specifier here" , val[1] )
			end
   result
  end
.,.,

 # reduce 262 omitted

 # reduce 263 omitted

 # reduce 264 omitted

 # reduce 265 omitted

 # reduce 266 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 955
  def _reduce_267( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 957
  def _reduce_268( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 960
  def _reduce_269( val, _values, result )
 result = [ :INLINE ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 961
  def _reduce_270( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 962
  def _reduce_271( val, _values, result )
 result = [ :OPTIONAL ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 963
  def _reduce_272( val, _values, result )
 result = [ :REF_DESC ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 964
  def _reduce_273( val, _values, result )
 result = [ :DYNAMIC ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 967
  def _reduce_274( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 968
  def _reduce_275( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 969
  def _reduce_276( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 970
  def _reduce_277( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 974
  def _reduce_278( val, _values, result )
  result = [ :INTERNAL_ALLOC, val[0].val, val[2].val, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 976
  def _reduce_279( val, _values, result )
  result = [ :RELAY_ALLOC, val[0].val, val[2].val, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 982
  def _reduce_280( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 984
  def _reduce_281( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0], "[]" )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 986
  def _reduce_282( val, _values, result )
 result = Port.new(val[2].val, val[1], val[0], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 988
  def _reduce_283( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0], nil, val[4], val[ 6 ].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 991
  def _reduce_284( val, _values, result )
 result = :CALL
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 992
  def _reduce_285( val, _values, result )
 result = :ENTRY
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 996
  def _reduce_286( val, _values, result )
 result = val[0]
   result
  end
.,.,

 # reduce 287 omitted

 # reduce 288 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1008
  def _reduce_289( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1012
  def _reduce_290( val, _values, result )
 Celltype.new_attribute( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1014
  def _reduce_291( val, _values, result )
 Celltype.new_attribute( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1026
  def _reduce_292( val, _values, result )
			val[0].each{ |i|       # i:Decl
				i.set_kind( :ATTRIBUTE )
				i.check
			}
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1035
  def _reduce_293( val, _values, result )
			val[3].each{ |i|       # i:Decl
				i.set_kind( :ATTRIBUTE )   # 設定順序あり
				i.set_specifier_list( [val[1]] )
				i.check
			}
			result = val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1037
  def _reduce_294( val, _values, result )
 result = [:OMIT]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1038
  def _reduce_295( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1039
  def _reduce_296( val, _values, result )
  result = [:CHOICE,val[3]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1042
  def _reduce_297( val, _values, result )
  result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1043
  def _reduce_298( val, _values, result )
  result = [ val[0] ]
   result
  end
.,.,

 # reduce 299 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1051
  def _reduce_300( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1055
  def _reduce_301( val, _values, result )
 Celltype.new_var( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1057
  def _reduce_302( val, _values, result )
 Celltype.new_var( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1067
  def _reduce_303( val, _values, result )
			val[0].each{ |i|       # i:Decl
				i.set_kind( :VAR )
				i.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1076
  def _reduce_304( val, _values, result )
			val[3].each{ |i|       # i:Decl
				i.set_kind( :VAR )   # 設定順序あり
				i.set_specifier_list( [val[1]] )
				i.check
			}
			result = val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1078
  def _reduce_305( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1086
  def _reduce_306( val, _values, result )
			Celltype.new_require( val[1], val[3] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1090
  def _reduce_307( val, _values, result )
			Celltype.new_require( val[3], val[5], val[1].val )
   result
  end
.,.,

 # reduce 308 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1096
  def _reduce_309( val, _values, result )
 Factory.set_f_celltype( false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1097
  def _reduce_310( val, _values, result )
 Factory.set_f_celltype( true )
   result
  end
.,.,

 # reduce 311 omitted

 # reduce 312 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1105
  def _reduce_313( val, _values, result )
 Factory.new( val[0].val, val[2], val[4], nil    )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1107
  def _reduce_314( val, _values, result )
 Factory.new( val[0].val, val[2], val[4], val[6] )
   result
  end
.,.,

 # reduce 315 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1114
  def _reduce_316( val, _values, result )
 result = [ [ :IDENTIFIER, val[0].val ] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1116
  def _reduce_317( val, _values, result )
 result << [ :IDENTIFIER, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1118
  def _reduce_318( val, _values, result )
 result = [ [ :STRING_LITERAL, val[0].val ] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1120
  def _reduce_319( val, _values, result )
 result << [ :STRING_LITERAL, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1125
  def _reduce_320( val, _values, result )
 Cell.new_def
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1127
  def _reduce_321( val, _values, result )
 result = Cell.end_of_parse true
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1129
  def _reduce_322( val, _values, result )
 result = Cell.end_of_parse false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1133
  def _reduce_323( val, _values, result )
 result = Cell.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1137
  def _reduce_324( val, _values, result )
 result = Cell.set_name(val[0].val)
   result
  end
.,.,

 # reduce 325 omitted

 # reduce 326 omitted

 # reduce 327 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1146
  def _reduce_328( val, _values, result )
 val[3].set_specifier_list( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1148
  def _reduce_329( val, _values, result )
 val[0].set_specifier_list( [] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1152
  def _reduce_330( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1154
  def _reduce_331( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1158
  def _reduce_332( val, _values, result )
 result = [ :THROUGH, val[2], val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1161
  def _reduce_333( val, _values, result )
 result = val[0]
   result
  end
.,.,

 # reduce 334 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1178
  def _reduce_335( val, _values, result )
			result = Join.new( val[0].val,  -1, val[4] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1183
  def _reduce_336( val, _values, result )
			result = Join.new( val[0].val, val[2], val[5] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1188
  def _reduce_337( val, _values, result )
			result = Join.new( val[0].val, nil, val[2] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1193
  def _reduce_338( val, _values, result )
			result = Join.new( val[0].val, nil, [ :COMPOSITE, val[4] ] )
			Cell.new_join( result, true )
   result
  end
.,.,

 # reduce 339 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1204
  def _reduce_340( val, _values, result )
			rj = ReverseJoin.new( val[0].val, nil, val[2], val[4].val )
			Cell.new_reverse_join( rj )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1210
  def _reduce_341( val, _values, result )
			rj = ReverseJoin.new( val[0].val, nil, val[2], val[4].val, val[6] )
			Cell.new_reverse_join( rj )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1216
  def _reduce_342( val, _values, result )
			rj = ReverseJoin.new( val[0].val, val[2], val[5], val[7].val )
			Cell.new_reverse_join( rj )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1222
  def _reduce_343( val, _values, result )
			rj = ReverseJoin.new( val[0].val, val[2], val[5], val[7].val, val[9] )
			Cell.new_reverse_join( rj )
   result
  end
.,.,

 # reduce 344 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1234
  def _reduce_345( val, _values, result )
			CompositeCelltype.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1237
  def _reduce_346( val, _values, result )
 result = CompositeCelltype.new(val[0].val)
   result
  end
.,.,

 # reduce 347 omitted

 # reduce 348 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1250
  def _reduce_349( val, _values, result )
			if val[0].kind_of?( Port ) then
				CompositeCelltype.new_port( val[0] )   # 遅延して登録
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1265
  def _reduce_350( val, _values, result )
			if val[3].kind_of?( Port ) then
				# port 以外 val[3] に有効な値が入っていないので、以下のメソッドを適用できない
				# 現状 port, cell 以外は指定子を受け付けない
				# （しかし将来他の文も指定子を受け付ける可能性があるので、この位置に記述する）
				val[3].set_specifier( Generator.get_statement_specifier )
				CompositeCelltype.new_port( val[3] )   # 遅延して登録 (set_specifier 後)
			elsif val[3].kind_of?( Cell ) then
				# Cell.end_of_parse にて設定
			else
              Generator.get_statement_specifier   # クリア
              Generator.error( "G1013 unexpected specifier"  )
			end
   result
  end
.,.,

 # reduce 351 omitted

 # reduce 352 omitted

 # reduce 353 omitted

 # reduce 354 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1279
  def _reduce_355( val, _values, result )
			Generator.add_statement_specifier val[0]
			result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1281
  def _reduce_356( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1282
  def _reduce_357( val, _values, result )
 result = [ :OPTIONAL ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1283
  def _reduce_358( val, _values, result )
 result = [ :REF_DESC ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1284
  def _reduce_359( val, _values, result )
 result = [ :DYNAMIC ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1292
  def _reduce_360( val, _values, result )
			# CompositeCelltype.new_port( val[0] )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1296
  def _reduce_361( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1300
  def _reduce_362( val, _values, result )
 CompositeCelltype.new_attribute( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1302
  def _reduce_363( val, _values, result )
 CompositeCelltype.new_attribute( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1307
  def _reduce_364( val, _values, result )
 Cell.new_def
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1309
  def _reduce_365( val, _values, result )
 result = Cell.end_of_parse true
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1311
  def _reduce_366( val, _values, result )
 result = Cell.end_of_parse false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1316
  def _reduce_367( val, _values, result )
 Cell.new(val[0],true)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1320
  def _reduce_368( val, _values, result )
 Cell.set_name(val[0].val)
   result
  end
.,.,

 # reduce 369 omitted

 # reduce 370 omitted

 # reduce 371 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1330
  def _reduce_372( val, _values, result )
	Cell.external_join( val[0].val, val[4].val, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1332
  def _reduce_373( val, _values, result )
	Cell.external_join( val[0].val, val[2].val, false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1342
  def _reduce_374( val, _values, result )
			CompositeCelltype.new_join( val[0].val,
						val[2].val, val[4].val, :ENTRY )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1347
  def _reduce_375( val, _values, result )
			CompositeCelltype.new_join( val[2].val,
						val[4].val, val[6].val, :ENTRY )
   result
  end
.,.,

 # reduce 376 omitted

 # reduce 377 omitted

 # reduce 378 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1360
  def _reduce_379( val, _values, result )
 Region.end_of_parse
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1362
  def _reduce_380( val, _values, result )
 Region.end_of_parse
   result
  end
.,.,

 # reduce 381 omitted

 # reduce 382 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1371
  def _reduce_383( val, _values, result )
 Region.new_in_through( val[2].val, val[4].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1373
  def _reduce_384( val, _values, result )
 Region.new_in_through
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1375
  def _reduce_385( val, _values, result )
 Region.new_out_through( val[2].val, val[4].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1377
  def _reduce_386( val, _values, result )
 Region.new_out_through()
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1379
  def _reduce_387( val, _values, result )
 Region.new_to_through( val[2], val[4].val, val[6].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1381
  def _reduce_388( val, _values, result )
 Region.new_to_through( val[2], nil, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1383
  def _reduce_389( val, _values, result )
 Region.set_type( :NODE )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1385
  def _reduce_390( val, _values, result )
 Region.set_type( :LINKUNIT )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1387
  def _reduce_391( val, _values, result )
 Region.set_domain( val[2].val, val[4] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1389
  def _reduce_392( val, _values, result )
 Region.set_type( :CLASS, val[2].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1393
  def _reduce_393( val, _values, result )
 result = Region.new( val[0].val )
   result
  end
.,.,

 # reduce 394 omitted

 # reduce 395 omitted

 # reduce 396 omitted

 # reduce 397 omitted

 # reduce 398 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1406
  def _reduce_399( val, _values, result )
 Generator.add_statement_specifier val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1408
  def _reduce_400( val, _values, result )
 Generator.add_statement_specifier val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1412
  def _reduce_401( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1417
  def _reduce_402( val, _values, result )
 result = [ val[0].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1422
  def _reduce_403( val, _values, result )
 set_in_specifier
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1424
  def _reduce_404( val, _values, result )
 unset_in_specifier
   result
  end
.,.,

 # reduce 405 omitted

 # reduce 406 omitted

 # reduce 407 omitted

 # reduce 408 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1440
  def _reduce_409( val, _values, result )
			TECSGEN::Cell_location.new( val[1], val[3], val[5], val[7], val[9], val[12] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1446
  def _reduce_410( val, _values, result )
			result = val[0] << val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1447
  def _reduce_411( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1451
  def _reduce_412( val, _values, result )
 result = [ val[0], val[2], val[3] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1458
  def _reduce_413( val, _values, result )
            TECSGEN::Join_location.new( val[2], val[4], val[6], val[8], val[11] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1464
  def _reduce_414( val, _values, result )
            result = val[0] << [ val[1], val[3] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1464
  def _reduce_415( val, _values, result )
 result = []
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class Generator



# ファイル => INCLUDE("header")の配列
Include = Hash.new {|hash, key| hash[key] = []}


class Token

  attr_accessor :val, :file, :lineno, :col

  def initialize(val, file, lineno, col)
    @val = val
    @file = file
    @lineno = lineno
    @col = col

  end

  def to_s
    @val.to_s
  end

  def to_sym
    @val.to_sym
  end

  def get_name
    @val
  end

  def locale
    [@file, @lineno, @col]
  end

  def eql?(other)
    if other.is_a? Symbol
      @val == other
    elsif other.is_a? Token
      @val == other.val
    elsif other.is_a? String
      @val.to_s == other
    else
      raise ArgumentError
    end
  end

  alias == eql?

  def show_tree( indent )
    indent.times { print "  " }
    print "#{@val}\n"
  end

end

#= TECSIO
#  Ruby2.0(1.9) 対応に伴い導入したクラス
#  SJIS 以外では、ASCII-8BIT として入力する
class TECSIO
  def self.foreach(file) # ブロック引数 { |line| }
    pr = Proc.new   # このメソッドのブロック引数を pr に代入
    if $b_no_kcode then
	  msg = "E".encode $Ruby19_File_Encode
      if( $Ruby19_File_Encode == "Shift_JIS" )

        # Shift JIS は、いったん Windows-31J として読み込ませ、Shift_JIS に変換させる．
        # コメント等に含まれる SJIS に不適切な文字コードは '?' または REPLACEMENT CHARACTER に変換される．
        # EUC や UTF-8 で記述された CDL が混在していても、Ruby 例外が発生することなく処理を進めることができる．
        # 文字コード指定が SJIS であって、文字列リテラルの中に、文字コードがSJIS 以外の非 ASCII が含まれている場合、
        # Ruby 1.8 の tecsgen では文字コード指定に影響なく処理されたものが、Ruby 1.9 以降では '?' に置き換わる可能性がある．

        mode = "r:Windows-31J"
      else
        mode = "r:#{$Ruby19_File_Encode}"
      end
      # mode = "r"
    else
	  msg = "E"
      mode = "r"
    end

    f = File.open( file, mode )
    begin
      f.each{ |line|
        # dbgPrint line
        line = str_code_convert( msg, line )
        pr.call( line )
      }
    ensure
      f.close
    end
  end

  #=== 文字コードが相違する場合一致させる
  # msg と str の文字コードが相違する場合、str を msg の文字コードに変換する
  # 変換不可の文字コードは '?' (utf-8 の場合 U+FFFD (REPLACEMENT CHARACTER )) に変換
  #
  # このメソッドは、エラーメッセージ出力でも使用されていることに注意．
  #
  #msg_enc::Encode | String
  def self.str_code_convert( msg, str )
    if $b_no_kcode == false then
      return str                          # Ruby V1.8 まで
    end
    if msg.encoding != str.encoding then
      option = { :invalid => :replace, :undef => :replace }   # 例外を発生させず、'?' に変換する(utf-8 は 0xfffd)
      # return str.encode( msg.encoding, option )
      str = str.encode( "utf-8", option )
      return str.encode( msg.encoding, option )
    else
      return str
    end
  end
end
