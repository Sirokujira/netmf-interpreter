#
#  TECS Generator
#      Generator for TOPPERS Embedded Component System
#  
#   Copyright (C) 2008-2012 by TOPPERS Project
#--
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
#  
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
#  
#++

require "HRP2KernelObjectPlugin"

#== celltype プラグインの共通の親クラス
class HRP2TaskPlugin < HRP2KernelObjectPlugin
    @@ep = [:eTaskActivate, :eTaskControl, :eTaskManage, :eTaskRefer ]
    ##
    #
    # file : output file (ex.tecsgen.cfg)
    # cell : 
    # val  : 
    # tab  : 
    def print_cfg_cre(file, cell, val, tab)
        val[:id] = val[:id].gsub( /(^|[^\$])\$id\$/, "\\1#{@celltype.get_name.to_s}_#{cell.get_name.to_s}" )
        # $cbp$の代わり
        index = cell.get_id - @celltype.get_id_base
        cell_CB_name = "#{@celltype.get_global_name}_CB_tab[#{index}]"
        # CRE_XXX/DEF_XXXの生成
        if cell.get_region.get_region_type == :DOMAIN
            # 保護ドメインに属する場合
            if cell.get_region.get_param == :KERNEL_DOMAIN
                # カーネルドメイン
                if val[:userStackSize] != "OMIT"
                    raise "system task cannot have user stack."
                end
                file2.print <<EOT
#{tab}CRE_TSK(#{val[:id]}, { #{val[:taskAttribute]}, &#{cell_CB_name}, tTask_start_task, #{val[:priority]}, #{val[:systemStackSize]}, NULL });
EOT
            else
                # ユーザドメイン
                if val[:userStackSize] == "OMIT"
                    raise "user task must have user stack."
                end
                if val[:systemStackSize] == "OMIT"
                    file2.print <<EOT
#{tab}CRE_TSK(#{val[:id]}, { #{val[:taskAttribute]}, &#{cell_CB_name}, tTask_start_task, #{val[:priority]}, #{val[:userStackSize]}, NULL });
EOT
                else
                    file2.print <<EOT
#{tab}CRE_TSK(#{val[:id]}, { #{val[:taskAttribute]}, &#{cell_CB_name}, tTask_start_task, #{val[:priority]}, #{val[:userStackSize]}, NULL, #{val[:systemStackSize]}, NULL });
EOT
                end
            end
        else
            # 無所属の場合
            raise "task #{val[:id]} must belong to a domain."
        end
   
        # 例外用のを生成
        file2.print <<EOT
#{tab}DEF_TEX(#{val[:id]}, { #{val[:exceptionAttribute]}, tTask_start_exception });
EOT
    end

    def print_cfg_sac(file, val, acv)
       file.puts "SAC_TSK(#{val[:id]}, { #{acv[0]}, #{acv[1]}, #{acv[2]}, #{acv[3]} });"
    end

    #tTaskの受け口リスト 
    def get_entry_ports_name_list()
        #[:eTaskActivate, :eTaskControl, :eTaskManage, :eTaskRefer ]
        @@ep
    end
    
end

