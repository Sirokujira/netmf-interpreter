; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	E:\netmf-interpreter3\DeviceCode\Targets\OS\Toppers\asp\library\t_perror.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2976	DB	'%s (%d) reported by `%s'' in line %d of `%s''.', 00H
_DATA	ENDS
PUBLIC	_t_perror
EXTRN	_syslog_wri_log:PROC
EXTRN	_itron_strerror:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\netmf-interpreter3\devicecode\targets\os\toppers\asp\library\t_perror.c
_TEXT	SEGMENT
_prio$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_expr$ = 20						; size = 4
_ercd$ = 24						; size = 4
_t_perror PROC

; 37   :  *  の責任を負わない．

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 38   :  * 
; 39   :  *  @(#) $Id: t_perror.c 2728 2015-12-30 01:46:11Z ertl-honda $

  00003	8b 45 0c	 mov	 eax, DWORD PTR _file$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _line$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 14	 mov	 edx, DWORD PTR _expr$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 18	 mov	 eax, DWORD PTR _ercd$[ebp]
  00012	c1 f8 08	 sar	 eax, 8
  00015	50		 push	 eax
  00016	8b 4d 18	 mov	 ecx, DWORD PTR _ercd$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 _itron_strerror
  0001f	83 c4 04	 add	 esp, 4
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET $SG2976
  00028	6a 01		 push	 1
  0002a	8b 55 08	 mov	 edx, DWORD PTR _prio$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 __syslog_6
  00033	83 c4 20	 add	 esp, 32			; 00000020H

; 40   :  */
; 41   : 

  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_t_perror ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\netmf-interpreter3\devicecode\targets\os\toppers\asp\include\t_syslog.h
_TEXT	SEGMENT
_logbuf$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_prio$ = 8						; size = 4
_type$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_arg3$ = 24						; size = 4
_arg4$ = 28						; size = 4
_arg5$ = 32						; size = 4
_arg6$ = 36						; size = 4
__syslog_6 PROC

; 194  : 	logbuf.loginfo[2] = arg3;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	57		 push	 edi
  00007	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0000f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00014	f3 ab		 rep stosd
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 195  : 	logbuf.loginfo[3] = arg4;
; 196  : 	(void) syslog_wri_log(prio, &logbuf);
; 197  : }

  00020	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00023	89 45 d8	 mov	 DWORD PTR _logbuf$[ebp], eax

; 198  : 

  00026	b9 04 00 00 00	 mov	 ecx, 4
  0002b	6b d1 00	 imul	 edx, ecx, 0
  0002e	8b 45 10	 mov	 eax, DWORD PTR _arg1$[ebp]
  00031	89 44 15 e0	 mov	 DWORD PTR _logbuf$[ebp+edx+8], eax

; 199  : Inline void

  00035	b9 04 00 00 00	 mov	 ecx, 4
  0003a	c1 e1 00	 shl	 ecx, 0
  0003d	8b 55 14	 mov	 edx, DWORD PTR _arg2$[ebp]
  00040	89 54 0d e0	 mov	 DWORD PTR _logbuf$[ebp+ecx+8], edx

; 200  : _syslog_5(uint_t prio, uint_t type, intptr_t arg1, intptr_t arg2,

  00044	b8 04 00 00 00	 mov	 eax, 4
  00049	d1 e0		 shl	 eax, 1
  0004b	8b 4d 18	 mov	 ecx, DWORD PTR _arg3$[ebp]
  0004e	89 4c 05 e0	 mov	 DWORD PTR _logbuf$[ebp+eax+8], ecx

; 201  : 							intptr_t arg3, intptr_t arg4, intptr_t arg5)

  00052	ba 04 00 00 00	 mov	 edx, 4
  00057	6b c2 03	 imul	 eax, edx, 3
  0005a	8b 4d 1c	 mov	 ecx, DWORD PTR _arg4$[ebp]
  0005d	89 4c 05 e0	 mov	 DWORD PTR _logbuf$[ebp+eax+8], ecx

; 202  : {

  00061	ba 04 00 00 00	 mov	 edx, 4
  00066	c1 e2 02	 shl	 edx, 2
  00069	8b 45 20	 mov	 eax, DWORD PTR _arg5$[ebp]
  0006c	89 44 15 e0	 mov	 DWORD PTR _logbuf$[ebp+edx+8], eax

; 203  : 	SYSLOG	logbuf;

  00070	b9 04 00 00 00	 mov	 ecx, 4
  00075	6b d1 05	 imul	 edx, ecx, 5
  00078	8b 45 24	 mov	 eax, DWORD PTR _arg6$[ebp]
  0007b	89 44 15 e0	 mov	 DWORD PTR _logbuf$[ebp+edx+8], eax

; 204  : 

  0007f	8d 4d d8	 lea	 ecx, DWORD PTR _logbuf$[ebp]
  00082	51		 push	 ecx
  00083	8b 55 08	 mov	 edx, DWORD PTR _prio$[ebp]
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 _syslog_wri_log
  0008c	83 c4 08	 add	 esp, 8

; 205  : 	logbuf.logtype = type;

  0008f	52		 push	 edx
  00090	8b cd		 mov	 ecx, ebp
  00092	50		 push	 eax
  00093	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@syslog_6
  00099	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009e	58		 pop	 eax
  0009f	5a		 pop	 edx
  000a0	5f		 pop	 edi
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a4	33 cd		 xor	 ecx, ebp
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	83 c4 2c	 add	 esp, 44			; 0000002cH
  000ae	3b ec		 cmp	 ebp, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
  000b9	8d 49 00	 npad	 3
$LN5@syslog_6:
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN4@syslog_6
$LN4@syslog_6:
  000c4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  000c8	20 00 00 00	 DD	 32			; 00000020H
  000cc	00 00 00 00	 DD	 $LN3@syslog_6
$LN3@syslog_6:
  000d0	6c		 DB	 108			; 0000006cH
  000d1	6f		 DB	 111			; 0000006fH
  000d2	67		 DB	 103			; 00000067H
  000d3	62		 DB	 98			; 00000062H
  000d4	75		 DB	 117			; 00000075H
  000d5	66		 DB	 102			; 00000066H
  000d6	00		 DB	 0
__syslog_6 ENDP
_TEXT	ENDS
END
